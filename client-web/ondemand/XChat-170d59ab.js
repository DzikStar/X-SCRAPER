(self.webpackChunk_twitter_responsive_web = self.webpackChunk_twitter_responsive_web || []).push([
    ["ondemand.XChat-170d59ab"],
    {
        124389: (k, r, e) => {
            !(function (k, r) {
                "use strict";
                var e,
                    a,
                    t,
                    o,
                    i,
                    c,
                    l,
                    s,
                    n = Math.imul,
                    u = r.$_$.w7,
                    p = r.$_$.t6,
                    d = r.$_$.df,
                    g = r.$_$.cf,
                    m = r.$_$.u,
                    h = r.$_$.ae,
                    f = r.$_$.h8,
                    b = r.$_$.t,
                    q = r.$_$.pl,
                    v = r.$_$.ha,
                    w = r.$_$.tb,
                    y = r.$_$.ge,
                    E = r.$_$.d1,
                    A = r.$_$.h1,
                    D = r.$_$.kd,
                    L = r.$_$.z3,
                    x = r.$_$.gf,
                    S = r.$_$.m5,
                    _ = r.$_$.mk,
                    T = r.$_$.md,
                    $ = r.$_$.hf,
                    N = r.$_$.ld,
                    R = r.$_$.g,
                    U = r.$_$.eh,
                    C = r.$_$.ch,
                    V = r.$_$.q1,
                    O = r.$_$.oj,
                    B = r.$_$.fb,
                    I = r.$_$.be,
                    G = r.$_$.gb,
                    H = r.$_$.t3,
                    P = r.$_$.i2,
                    j = r.$_$.mi,
                    z = r.$_$.xj,
                    F = r.$_$.ye,
                    M = r.$_$.we,
                    Y = r.$_$.pi,
                    J = r.$_$.g2,
                    Z = r.$_$.jd,
                    K = r.$_$.id;
                function Q(k) {
                    return (function (k, r) {
                        return W.call(r), u(r.adc_1, k), r;
                    })(k, g(d(W)));
                }
                function W() {
                    tk.call(this);
                    this.adc_1 = m();
                }
                function X(k, r) {
                    for (var e = b(f(r, 10)), a = r.p(); a.q(); ) {
                        var t = a.r(),
                            o = t.ph(),
                            i = t.qh(),
                            c = q(i, o);
                        e.k(c);
                    }
                    return e;
                }
                function kk() {
                    (e = this),
                        (this.ddc_1 = v([q("<", "&gt;"), q(">", "&lt;"), q('"', "&quot;"), q("'", "&apos;"), q("&", "&amp;")])),
                        (this.edc_1 = X(0, this.ddc_1)),
                        (this.fdc_1 = v([
                            q("'", "&apos;"),
                            q(" ", "&nbsp"),
                            q(" ", "&nbsp;"),
                            q("¡", "&iexcl"),
                            q("¡", "&iexcl;"),
                            q("¢", "&cent"),
                            q("¢", "&cent;"),
                            q("£", "&pound"),
                            q("£", "&pound;"),
                            q("¤", "&curren"),
                            q("¤", "&curren;"),
                            q("¥", "&yen"),
                            q("¥", "&yen;"),
                            q("¦", "&brvbar"),
                            q("¦", "&brvbar;"),
                            q("§", "&sect"),
                            q("§", "&sect;"),
                            q("¨", "&uml"),
                            q("¨", "&uml;"),
                            q("©", "&copy"),
                            q("©", "&copy;"),
                            q("ª", "&ordf"),
                            q("ª", "&ordf;"),
                            q("«", "&laquo"),
                            q("«", "&laquo;"),
                            q("¬", "&not"),
                            q("¬", "&not;"),
                            q("­", "&shy"),
                            q("­", "&shy;"),
                            q("®", "&reg"),
                            q("®", "&reg;"),
                            q("¯", "&macr"),
                            q("¯", "&macr;"),
                            q("°", "&deg"),
                            q("°", "&deg;"),
                            q("±", "&plusmn"),
                            q("±", "&plusmn;"),
                            q("²", "&sup2"),
                            q("²", "&sup2;"),
                            q("³", "&sup3"),
                            q("³", "&sup3;"),
                            q("´", "&acute"),
                            q("´", "&acute;"),
                            q("µ", "&micro"),
                            q("µ", "&micro;"),
                            q("¶", "&para"),
                            q("¶", "&para;"),
                            q("·", "&middot"),
                            q("·", "&middot;"),
                            q("¸", "&cedil"),
                            q("¸", "&cedil;"),
                            q("¹", "&sup1"),
                            q("¹", "&sup1;"),
                            q("º", "&ordm"),
                            q("º", "&ordm;"),
                            q("»", "&raquo"),
                            q("»", "&raquo;"),
                            q("¼", "&frac14"),
                            q("¼", "&frac14;"),
                            q("½", "&frac12"),
                            q("½", "&frac12;"),
                            q("¾", "&frac34"),
                            q("¾", "&frac34;"),
                            q("¿", "&iquest"),
                            q("¿", "&iquest;"),
                            q("À", "&Agrave"),
                            q("À", "&Agrave;"),
                            q("Á", "&Aacute"),
                            q("Á", "&Aacute;"),
                            q("Â", "&Acirc"),
                            q("Â", "&Acirc;"),
                            q("Ã", "&Atilde"),
                            q("Ã", "&Atilde;"),
                            q("Ä", "&Auml"),
                            q("Ä", "&Auml;"),
                            q("Å", "&Aring"),
                            q("Å", "&Aring;"),
                            q("Æ", "&AElig"),
                            q("Æ", "&AElig;"),
                            q("Ç", "&Ccedil"),
                            q("Ç", "&Ccedil;"),
                            q("È", "&Egrave"),
                            q("È", "&Egrave;"),
                            q("É", "&Eacute"),
                            q("É", "&Eacute;"),
                            q("Ê", "&Ecirc"),
                            q("Ê", "&Ecirc;"),
                            q("Ë", "&Euml"),
                            q("Ë", "&Euml;"),
                            q("Ì", "&Igrave"),
                            q("Ì", "&Igrave;"),
                            q("Í", "&Iacute"),
                            q("Í", "&Iacute;"),
                            q("Î", "&Icirc"),
                            q("Î", "&Icirc;"),
                            q("Ï", "&Iuml"),
                            q("Ï", "&Iuml;"),
                            q("Ð", "&ETH"),
                            q("Ð", "&ETH;"),
                            q("Ñ", "&Ntilde"),
                            q("Ñ", "&Ntilde;"),
                            q("Ò", "&Ograve"),
                            q("Ò", "&Ograve;"),
                            q("Ó", "&Oacute"),
                            q("Ó", "&Oacute;"),
                            q("Ô", "&Ocirc"),
                            q("Ô", "&Ocirc;"),
                            q("Õ", "&Otilde"),
                            q("Õ", "&Otilde;"),
                            q("Ö", "&Ouml"),
                            q("Ö", "&Ouml;"),
                            q("×", "&times"),
                            q("×", "&times;"),
                            q("Ø", "&Oslash"),
                            q("Ø", "&Oslash;"),
                            q("Ù", "&Ugrave"),
                            q("Ù", "&Ugrave;"),
                            q("Ú", "&Uacute"),
                            q("Ú", "&Uacute;"),
                            q("Û", "&Ucirc"),
                            q("Û", "&Ucirc;"),
                            q("Ü", "&Uuml"),
                            q("Ü", "&Uuml;"),
                            q("Ý", "&Yacute"),
                            q("Ý", "&Yacute;"),
                            q("Þ", "&THORN"),
                            q("Þ", "&THORN;"),
                            q("ß", "&szlig"),
                            q("ß", "&szlig;"),
                            q("à", "&agrave"),
                            q("à", "&agrave;"),
                            q("á", "&aacute"),
                            q("á", "&aacute;"),
                            q("â", "&acirc"),
                            q("â", "&acirc;"),
                            q("ã", "&atilde"),
                            q("ã", "&atilde;"),
                            q("ä", "&auml"),
                            q("ä", "&auml;"),
                            q("å", "&aring"),
                            q("å", "&aring;"),
                            q("æ", "&aelig"),
                            q("æ", "&aelig;"),
                            q("ç", "&ccedil"),
                            q("ç", "&ccedil;"),
                            q("è", "&egrave"),
                            q("è", "&egrave;"),
                            q("é", "&eacute"),
                            q("é", "&eacute;"),
                            q("ê", "&ecirc"),
                            q("ê", "&ecirc;"),
                            q("ë", "&euml"),
                            q("ë", "&euml;"),
                            q("ì", "&igrave"),
                            q("ì", "&igrave;"),
                            q("í", "&iacute"),
                            q("í", "&iacute;"),
                            q("î", "&icirc"),
                            q("î", "&icirc;"),
                            q("ï", "&iuml"),
                            q("ï", "&iuml;"),
                            q("ð", "&eth"),
                            q("ð", "&eth;"),
                            q("ñ", "&ntilde"),
                            q("ñ", "&ntilde;"),
                            q("ò", "&ograve"),
                            q("ò", "&ograve;"),
                            q("ó", "&oacute"),
                            q("ó", "&oacute;"),
                            q("ô", "&ocirc"),
                            q("ô", "&ocirc;"),
                            q("õ", "&otilde"),
                            q("õ", "&otilde;"),
                            q("ö", "&ouml"),
                            q("ö", "&ouml;"),
                            q("÷", "&divide"),
                            q("÷", "&divide;"),
                            q("ø", "&oslash"),
                            q("ø", "&oslash;"),
                            q("ù", "&ugrave"),
                            q("ù", "&ugrave;"),
                            q("ú", "&uacute"),
                            q("ú", "&uacute;"),
                            q("û", "&ucirc"),
                            q("û", "&ucirc;"),
                            q("ü", "&uuml"),
                            q("ü", "&uuml;"),
                            q("ý", "&yacute"),
                            q("ý", "&yacute;"),
                            q("þ", "&thorn"),
                            q("þ", "&thorn;"),
                            q("ÿ", "&yuml"),
                            q("ÿ", "&yuml;"),
                            q('"', "&quot"),
                            q('"', "&quot;"),
                            q("&", "&amp"),
                            q("&", "&amp;"),
                            q("<", "&lt"),
                            q("<", "&lt;"),
                            q(">", "&gt"),
                            q(">", "&gt;"),
                            q("Œ", "&OElig;"),
                            q("œ", "&oelig;"),
                            q("Š", "&Scaron;"),
                            q("š", "&scaron;"),
                            q("Ÿ", "&Yuml;"),
                            q("ˆ", "&circ;"),
                            q("˜", "&tilde;"),
                            q(" ", "&ensp;"),
                            q(" ", "&emsp;"),
                            q(" ", "&thinsp;"),
                            q("‌", "&zwnj;"),
                            q("‍", "&zwj;"),
                            q("‎", "&lrm;"),
                            q("‏", "&rlm;"),
                            q("–", "&ndash;"),
                            q("—", "&mdash;"),
                            q("‘", "&lsquo;"),
                            q("’", "&rsquo;"),
                            q("‚", "&sbquo;"),
                            q("“", "&ldquo;"),
                            q("”", "&rdquo;"),
                            q("„", "&bdquo;"),
                            q("†", "&dagger;"),
                            q("‡", "&Dagger;"),
                            q("‰", "&permil;"),
                            q("‹", "&lsaquo;"),
                            q("›", "&rsaquo;"),
                            q("€", "&euro;"),
                            q("ƒ", "&fnof;"),
                            q("Α", "&Alpha;"),
                            q("Β", "&Beta;"),
                            q("Γ", "&Gamma;"),
                            q("Δ", "&Delta;"),
                            q("Ε", "&Epsilon;"),
                            q("Ζ", "&Zeta;"),
                            q("Η", "&Eta;"),
                            q("Θ", "&Theta;"),
                            q("Ι", "&Iota;"),
                            q("Κ", "&Kappa;"),
                            q("Λ", "&Lambda;"),
                            q("Μ", "&Mu;"),
                            q("Ν", "&Nu;"),
                            q("Ξ", "&Xi;"),
                            q("Ο", "&Omicron;"),
                            q("Π", "&Pi;"),
                            q("Ρ", "&Rho;"),
                            q("Σ", "&Sigma;"),
                            q("Τ", "&Tau;"),
                            q("Υ", "&Upsilon;"),
                            q("Φ", "&Phi;"),
                            q("Χ", "&Chi;"),
                            q("Ψ", "&Psi;"),
                            q("Ω", "&Omega;"),
                            q("α", "&alpha;"),
                            q("β", "&beta;"),
                            q("γ", "&gamma;"),
                            q("δ", "&delta;"),
                            q("ε", "&epsilon;"),
                            q("ζ", "&zeta;"),
                            q("η", "&eta;"),
                            q("θ", "&theta;"),
                            q("ι", "&iota;"),
                            q("κ", "&kappa;"),
                            q("λ", "&lambda;"),
                            q("μ", "&mu;"),
                            q("ν", "&nu;"),
                            q("ξ", "&xi;"),
                            q("ο", "&omicron;"),
                            q("π", "&pi;"),
                            q("ρ", "&rho;"),
                            q("ς", "&sigmaf;"),
                            q("σ", "&sigma;"),
                            q("τ", "&tau;"),
                            q("υ", "&upsilon;"),
                            q("φ", "&phi;"),
                            q("χ", "&chi;"),
                            q("ψ", "&psi;"),
                            q("ω", "&omega;"),
                            q("ϑ", "&thetasym;"),
                            q("ϒ", "&upsih;"),
                            q("ϖ", "&piv;"),
                            q("•", "&bull;"),
                            q("…", "&hellip;"),
                            q("′", "&prime;"),
                            q("″", "&Prime;"),
                            q("‾", "&oline;"),
                            q("⁄", "&frasl;"),
                            q("℘", "&weierp;"),
                            q("ℑ", "&image;"),
                            q("ℜ", "&real;"),
                            q("™", "&trade;"),
                            q("ℵ", "&alefsym;"),
                            q("←", "&larr;"),
                            q("↑", "&uarr;"),
                            q("→", "&rarr;"),
                            q("↓", "&darr;"),
                            q("↔", "&harr;"),
                            q("↵", "&crarr;"),
                            q("⇐", "&lArr;"),
                            q("⇑", "&uArr;"),
                            q("⇒", "&rArr;"),
                            q("⇓", "&dArr;"),
                            q("⇔", "&hArr;"),
                            q("∀", "&forall;"),
                            q("∂", "&part;"),
                            q("∃", "&exist;"),
                            q("∅", "&empty;"),
                            q("∇", "&nabla;"),
                            q("∈", "&isin;"),
                            q("∉", "&notin;"),
                            q("∋", "&ni;"),
                            q("∏", "&prod;"),
                            q("∑", "&sum;"),
                            q("−", "&minus;"),
                            q("∗", "&lowast;"),
                            q("√", "&radic;"),
                            q("∝", "&prop;"),
                            q("∞", "&infin;"),
                            q("∠", "&ang;"),
                            q("∧", "&and;"),
                            q("∨", "&or;"),
                            q("∩", "&cap;"),
                            q("∪", "&cup;"),
                            q("∫", "&int;"),
                            q("∴", "&there4;"),
                            q("∼", "&sim;"),
                            q("≅", "&cong;"),
                            q("≈", "&asymp;"),
                            q("≠", "&ne;"),
                            q("≡", "&equiv;"),
                            q("≤", "&le;"),
                            q("≥", "&ge;"),
                            q("⊂", "&sub;"),
                            q("⊃", "&sup;"),
                            q("⊄", "&nsub;"),
                            q("⊆", "&sube;"),
                            q("⊇", "&supe;"),
                            q("⊕", "&oplus;"),
                            q("⊗", "&otimes;"),
                            q("⊥", "&perp;"),
                            q("⋅", "&sdot;"),
                            q("⌈", "&lceil;"),
                            q("⌉", "&rceil;"),
                            q("⌊", "&lfloor;"),
                            q("⌋", "&rfloor;"),
                            q("〈", "&lang;"),
                            q("〉", "&rang;"),
                            q("◊", "&loz;"),
                            q("♠", "&spades;"),
                            q("♣", "&clubs;"),
                            q("♥", "&hearts;"),
                            q("♦", "&diams;"),
                        ])),
                        (this.gdc_1 = X(0, this.fdc_1));
                    var k = m();
                    k.k(q("Æ", "&AElig")),
                        k.k(q("Æ", "&AElig;")),
                        k.k(q("&", "&AMP")),
                        k.k(q("&", "&AMP;")),
                        k.k(q("Á", "&Aacute")),
                        k.k(q("Á", "&Aacute;")),
                        k.k(q("Ă", "&Abreve;")),
                        k.k(q("Â", "&Acirc")),
                        k.k(q("Â", "&Acirc;")),
                        k.k(q("А", "&Acy;")),
                        k.k(q("𝔄", "&Afr;")),
                        k.k(q("À", "&Agrave")),
                        k.k(q("À", "&Agrave;")),
                        k.k(q("Α", "&Alpha;")),
                        k.k(q("Ā", "&Amacr;")),
                        k.k(q("⩓", "&And;")),
                        k.k(q("Ą", "&Aogon;")),
                        k.k(q("𝔸", "&Aopf;")),
                        k.k(q("⁡", "&ApplyFunction;")),
                        k.k(q("Å", "&Aring")),
                        k.k(q("Å", "&Aring;")),
                        k.k(q("𝒜", "&Ascr;")),
                        k.k(q("≔", "&Assign;")),
                        k.k(q("Ã", "&Atilde")),
                        k.k(q("Ã", "&Atilde;")),
                        k.k(q("Ä", "&Auml")),
                        k.k(q("Ä", "&Auml;")),
                        k.k(q("∖", "&Backslash;")),
                        k.k(q("⫧", "&Barv;")),
                        k.k(q("⌆", "&Barwed;")),
                        k.k(q("Б", "&Bcy;")),
                        k.k(q("∵", "&Because;")),
                        k.k(q("ℬ", "&Bernoullis;")),
                        k.k(q("Β", "&Beta;")),
                        k.k(q("𝔅", "&Bfr;")),
                        k.k(q("𝔹", "&Bopf;")),
                        k.k(q("˘", "&Breve;")),
                        k.k(q("ℬ", "&Bscr;")),
                        k.k(q("≎", "&Bumpeq;")),
                        k.k(q("Ч", "&CHcy;")),
                        k.k(q("©", "&COPY")),
                        k.k(q("©", "&COPY;")),
                        k.k(q("Ć", "&Cacute;")),
                        k.k(q("⋒", "&Cap;")),
                        k.k(q("ⅅ", "&CapitalDifferentialD;")),
                        k.k(q("ℭ", "&Cayleys;")),
                        k.k(q("Č", "&Ccaron;")),
                        k.k(q("Ç", "&Ccedil")),
                        k.k(q("Ç", "&Ccedil;")),
                        k.k(q("Ĉ", "&Ccirc;")),
                        k.k(q("∰", "&Cconint;")),
                        k.k(q("Ċ", "&Cdot;")),
                        k.k(q("¸", "&Cedilla;")),
                        k.k(q("·", "&CenterDot;")),
                        k.k(q("ℭ", "&Cfr;")),
                        k.k(q("Χ", "&Chi;")),
                        k.k(q("⊙", "&CircleDot;")),
                        k.k(q("⊖", "&CircleMinus;")),
                        k.k(q("⊕", "&CirclePlus;")),
                        k.k(q("⊗", "&CircleTimes;")),
                        k.k(q("∲", "&ClockwiseContourIntegral;")),
                        k.k(q("”", "&CloseCurlyDoubleQuote;")),
                        k.k(q("’", "&CloseCurlyQuote;")),
                        k.k(q("∷", "&Colon;")),
                        k.k(q("⩴", "&Colone;")),
                        k.k(q("≡", "&Congruent;")),
                        k.k(q("∯", "&Conint;")),
                        k.k(q("∮", "&ContourIntegral;")),
                        k.k(q("ℂ", "&Copf;")),
                        k.k(q("∐", "&Coproduct;")),
                        k.k(q("∳", "&CounterClockwiseContourIntegral;")),
                        k.k(q("⨯", "&Cross;")),
                        k.k(q("𝒞", "&Cscr;")),
                        k.k(q("⋓", "&Cup;")),
                        k.k(q("≍", "&CupCap;")),
                        k.k(q("ⅅ", "&DD;")),
                        k.k(q("⤑", "&DDotrahd;")),
                        k.k(q("Ђ", "&DJcy;")),
                        k.k(q("Ѕ", "&DScy;")),
                        k.k(q("Џ", "&DZcy;")),
                        k.k(q("‡", "&Dagger;")),
                        k.k(q("↡", "&Darr;")),
                        k.k(q("⫤", "&Dashv;")),
                        k.k(q("Ď", "&Dcaron;")),
                        k.k(q("Д", "&Dcy;")),
                        k.k(q("∇", "&Del;")),
                        k.k(q("Δ", "&Delta;")),
                        k.k(q("𝔇", "&Dfr;")),
                        k.k(q("´", "&DiacriticalAcute;")),
                        k.k(q("˙", "&DiacriticalDot;")),
                        k.k(q("˝", "&DiacriticalDoubleAcute;")),
                        k.k(q("`", "&DiacriticalGrave;")),
                        k.k(q("˜", "&DiacriticalTilde;")),
                        k.k(q("⋄", "&Diamond;")),
                        k.k(q("ⅆ", "&DifferentialD;")),
                        k.k(q("𝔻", "&Dopf;")),
                        k.k(q("¨", "&Dot;")),
                        k.k(q("⃜", "&DotDot;")),
                        k.k(q("≐", "&DotEqual;")),
                        k.k(q("∯", "&DoubleContourIntegral;")),
                        k.k(q("¨", "&DoubleDot;")),
                        k.k(q("⇓", "&DoubleDownArrow;")),
                        k.k(q("⇐", "&DoubleLeftArrow;")),
                        k.k(q("⇔", "&DoubleLeftRightArrow;")),
                        k.k(q("⫤", "&DoubleLeftTee;")),
                        k.k(q("⟸", "&DoubleLongLeftArrow;")),
                        k.k(q("⟺", "&DoubleLongLeftRightArrow;")),
                        k.k(q("⟹", "&DoubleLongRightArrow;")),
                        k.k(q("⇒", "&DoubleRightArrow;")),
                        k.k(q("⊨", "&DoubleRightTee;")),
                        k.k(q("⇑", "&DoubleUpArrow;")),
                        k.k(q("⇕", "&DoubleUpDownArrow;")),
                        k.k(q("∥", "&DoubleVerticalBar;")),
                        k.k(q("↓", "&DownArrow;")),
                        k.k(q("⤓", "&DownArrowBar;")),
                        k.k(q("⇵", "&DownArrowUpArrow;")),
                        k.k(q("̑", "&DownBreve;")),
                        k.k(q("⥐", "&DownLeftRightVector;")),
                        k.k(q("⥞", "&DownLeftTeeVector;")),
                        k.k(q("↽", "&DownLeftVector;")),
                        k.k(q("⥖", "&DownLeftVectorBar;")),
                        k.k(q("⥟", "&DownRightTeeVector;")),
                        k.k(q("⇁", "&DownRightVector;")),
                        k.k(q("⥗", "&DownRightVectorBar;")),
                        k.k(q("⊤", "&DownTee;")),
                        k.k(q("↧", "&DownTeeArrow;")),
                        k.k(q("⇓", "&Downarrow;")),
                        k.k(q("𝒟", "&Dscr;")),
                        k.k(q("Đ", "&Dstrok;")),
                        k.k(q("Ŋ", "&ENG;")),
                        k.k(q("Ð", "&ETH")),
                        k.k(q("Ð", "&ETH;")),
                        k.k(q("É", "&Eacute")),
                        k.k(q("É", "&Eacute;")),
                        k.k(q("Ě", "&Ecaron;")),
                        k.k(q("Ê", "&Ecirc")),
                        k.k(q("Ê", "&Ecirc;")),
                        k.k(q("Э", "&Ecy;")),
                        k.k(q("Ė", "&Edot;")),
                        k.k(q("𝔈", "&Efr;")),
                        k.k(q("È", "&Egrave")),
                        k.k(q("È", "&Egrave;")),
                        k.k(q("∈", "&Element;")),
                        k.k(q("Ē", "&Emacr;")),
                        k.k(q("◻", "&EmptySmallSquare;")),
                        k.k(q("▫", "&EmptyVerySmallSquare;")),
                        k.k(q("Ę", "&Eogon;")),
                        k.k(q("𝔼", "&Eopf;")),
                        k.k(q("Ε", "&Epsilon;")),
                        k.k(q("⩵", "&Equal;")),
                        k.k(q("≂", "&EqualTilde;")),
                        k.k(q("⇌", "&Equilibrium;")),
                        k.k(q("ℰ", "&Escr;")),
                        k.k(q("⩳", "&Esim;")),
                        k.k(q("Η", "&Eta;")),
                        k.k(q("Ë", "&Euml")),
                        k.k(q("Ë", "&Euml;")),
                        k.k(q("∃", "&Exists;")),
                        k.k(q("ⅇ", "&ExponentialE;")),
                        k.k(q("Ф", "&Fcy;")),
                        k.k(q("𝔉", "&Ffr;")),
                        k.k(q("◼", "&FilledSmallSquare;")),
                        k.k(q("▪", "&FilledVerySmallSquare;")),
                        k.k(q("𝔽", "&Fopf;")),
                        k.k(q("∀", "&ForAll;")),
                        k.k(q("ℱ", "&Fouriertrf;")),
                        k.k(q("ℱ", "&Fscr;")),
                        k.k(q("Ѓ", "&GJcy;")),
                        k.k(q(">", "&GT")),
                        k.k(q(">", "&GT;")),
                        k.k(q("Γ", "&Gamma;")),
                        k.k(q("Ϝ", "&Gammad;")),
                        k.k(q("Ğ", "&Gbreve;")),
                        k.k(q("Ģ", "&Gcedil;")),
                        k.k(q("Ĝ", "&Gcirc;")),
                        k.k(q("Г", "&Gcy;")),
                        k.k(q("Ġ", "&Gdot;")),
                        k.k(q("𝔊", "&Gfr;")),
                        k.k(q("⋙", "&Gg;")),
                        k.k(q("𝔾", "&Gopf;")),
                        k.k(q("≥", "&GreaterEqual;")),
                        k.k(q("⋛", "&GreaterEqualLess;")),
                        k.k(q("≧", "&GreaterFullEqual;")),
                        k.k(q("⪢", "&GreaterGreater;")),
                        k.k(q("≷", "&GreaterLess;")),
                        k.k(q("⩾", "&GreaterSlantEqual;")),
                        k.k(q("≳", "&GreaterTilde;")),
                        k.k(q("𝒢", "&Gscr;")),
                        k.k(q("≫", "&Gt;")),
                        k.k(q("Ъ", "&HARDcy;")),
                        k.k(q("ˇ", "&Hacek;")),
                        k.k(q("^", "&Hat;")),
                        k.k(q("Ĥ", "&Hcirc;")),
                        k.k(q("ℌ", "&Hfr;")),
                        k.k(q("ℋ", "&HilbertSpace;")),
                        k.k(q("ℍ", "&Hopf;")),
                        k.k(q("─", "&HorizontalLine;")),
                        k.k(q("ℋ", "&Hscr;")),
                        k.k(q("Ħ", "&Hstrok;")),
                        k.k(q("≎", "&HumpDownHump;")),
                        k.k(q("≏", "&HumpEqual;")),
                        k.k(q("Е", "&IEcy;")),
                        k.k(q("Ĳ", "&IJlig;")),
                        k.k(q("Ё", "&IOcy;")),
                        k.k(q("Í", "&Iacute")),
                        k.k(q("Í", "&Iacute;")),
                        k.k(q("Î", "&Icirc")),
                        k.k(q("Î", "&Icirc;")),
                        k.k(q("И", "&Icy;")),
                        k.k(q("İ", "&Idot;")),
                        k.k(q("ℑ", "&Ifr;")),
                        k.k(q("Ì", "&Igrave")),
                        k.k(q("Ì", "&Igrave;")),
                        k.k(q("ℑ", "&Im;")),
                        k.k(q("Ī", "&Imacr;")),
                        k.k(q("ⅈ", "&ImaginaryI;")),
                        k.k(q("⇒", "&Implies;")),
                        k.k(q("∬", "&Int;")),
                        k.k(q("∫", "&Integral;")),
                        k.k(q("⋂", "&Intersection;")),
                        k.k(q("⁣", "&InvisibleComma;")),
                        k.k(q("⁢", "&InvisibleTimes;")),
                        k.k(q("Į", "&Iogon;")),
                        k.k(q("𝕀", "&Iopf;")),
                        k.k(q("Ι", "&Iota;")),
                        k.k(q("ℐ", "&Iscr;")),
                        k.k(q("Ĩ", "&Itilde;")),
                        k.k(q("І", "&Iukcy;")),
                        k.k(q("Ï", "&Iuml")),
                        k.k(q("Ï", "&Iuml;")),
                        k.k(q("Ĵ", "&Jcirc;")),
                        k.k(q("Й", "&Jcy;")),
                        k.k(q("𝔍", "&Jfr;")),
                        k.k(q("𝕁", "&Jopf;")),
                        k.k(q("𝒥", "&Jscr;")),
                        k.k(q("Ј", "&Jsercy;")),
                        k.k(q("Є", "&Jukcy;")),
                        k.k(q("Х", "&KHcy;")),
                        k.k(q("Ќ", "&KJcy;")),
                        k.k(q("Κ", "&Kappa;")),
                        k.k(q("Ķ", "&Kcedil;")),
                        k.k(q("К", "&Kcy;")),
                        k.k(q("𝔎", "&Kfr;")),
                        k.k(q("𝕂", "&Kopf;")),
                        k.k(q("𝒦", "&Kscr;")),
                        k.k(q("Љ", "&LJcy;")),
                        k.k(q("<", "&LT")),
                        k.k(q("<", "&LT;")),
                        k.k(q("Ĺ", "&Lacute;")),
                        k.k(q("Λ", "&Lambda;")),
                        k.k(q("⟪", "&Lang;")),
                        k.k(q("ℒ", "&Laplacetrf;")),
                        k.k(q("↞", "&Larr;")),
                        k.k(q("Ľ", "&Lcaron;")),
                        k.k(q("Ļ", "&Lcedil;")),
                        k.k(q("Л", "&Lcy;")),
                        k.k(q("⟨", "&LeftAngleBracket;")),
                        k.k(q("←", "&LeftArrow;")),
                        k.k(q("⇤", "&LeftArrowBar;")),
                        k.k(q("⇆", "&LeftArrowRightArrow;")),
                        k.k(q("⌈", "&LeftCeiling;")),
                        k.k(q("⟦", "&LeftDoubleBracket;")),
                        k.k(q("⥡", "&LeftDownTeeVector;")),
                        k.k(q("⇃", "&LeftDownVector;")),
                        k.k(q("⥙", "&LeftDownVectorBar;")),
                        k.k(q("⌊", "&LeftFloor;")),
                        k.k(q("↔", "&LeftRightArrow;")),
                        k.k(q("⥎", "&LeftRightVector;")),
                        k.k(q("⊣", "&LeftTee;")),
                        k.k(q("↤", "&LeftTeeArrow;")),
                        k.k(q("⥚", "&LeftTeeVector;")),
                        k.k(q("⊲", "&LeftTriangle;")),
                        k.k(q("⧏", "&LeftTriangleBar;")),
                        k.k(q("⊴", "&LeftTriangleEqual;")),
                        k.k(q("⥑", "&LeftUpDownVector;")),
                        k.k(q("⥠", "&LeftUpTeeVector;")),
                        k.k(q("↿", "&LeftUpVector;")),
                        k.k(q("⥘", "&LeftUpVectorBar;")),
                        k.k(q("↼", "&LeftVector;")),
                        k.k(q("⥒", "&LeftVectorBar;")),
                        k.k(q("⇐", "&Leftarrow;")),
                        k.k(q("⇔", "&Leftrightarrow;")),
                        k.k(q("⋚", "&LessEqualGreater;")),
                        k.k(q("≦", "&LessFullEqual;")),
                        k.k(q("≶", "&LessGreater;")),
                        k.k(q("⪡", "&LessLess;")),
                        k.k(q("⩽", "&LessSlantEqual;")),
                        k.k(q("≲", "&LessTilde;")),
                        k.k(q("𝔏", "&Lfr;")),
                        k.k(q("⋘", "&Ll;")),
                        k.k(q("⇚", "&Lleftarrow;")),
                        k.k(q("Ŀ", "&Lmidot;")),
                        k.k(q("⟵", "&LongLeftArrow;")),
                        k.k(q("⟷", "&LongLeftRightArrow;")),
                        k.k(q("⟶", "&LongRightArrow;")),
                        k.k(q("⟸", "&Longleftarrow;")),
                        k.k(q("⟺", "&Longleftrightarrow;")),
                        k.k(q("⟹", "&Longrightarrow;")),
                        k.k(q("𝕃", "&Lopf;")),
                        k.k(q("↙", "&LowerLeftArrow;")),
                        k.k(q("↘", "&LowerRightArrow;")),
                        k.k(q("ℒ", "&Lscr;")),
                        k.k(q("↰", "&Lsh;")),
                        k.k(q("Ł", "&Lstrok;")),
                        k.k(q("≪", "&Lt;")),
                        k.k(q("⤅", "&Map;")),
                        k.k(q("М", "&Mcy;")),
                        k.k(q(" ", "&MediumSpace;")),
                        k.k(q("ℳ", "&Mellintrf;")),
                        k.k(q("𝔐", "&Mfr;")),
                        k.k(q("∓", "&MinusPlus;")),
                        k.k(q("𝕄", "&Mopf;")),
                        k.k(q("ℳ", "&Mscr;")),
                        k.k(q("Μ", "&Mu;")),
                        k.k(q("Њ", "&NJcy;")),
                        k.k(q("Ń", "&Nacute;")),
                        k.k(q("Ň", "&Ncaron;")),
                        k.k(q("Ņ", "&Ncedil;")),
                        k.k(q("Н", "&Ncy;")),
                        k.k(q("​", "&NegativeMediumSpace;")),
                        k.k(q("​", "&NegativeThickSpace;")),
                        k.k(q("​", "&NegativeThinSpace;")),
                        k.k(q("​", "&NegativeVeryThinSpace;")),
                        k.k(q("≫", "&NestedGreaterGreater;")),
                        k.k(q("≪", "&NestedLessLess;")),
                        k.k(q("\n", "&NewLine;")),
                        k.k(q("𝔑", "&Nfr;")),
                        k.k(q("⁠", "&NoBreak;")),
                        k.k(q(" ", "&NonBreakingSpace;")),
                        k.k(q("ℕ", "&Nopf;")),
                        k.k(q("⫬", "&Not;")),
                        k.k(q("≢", "&NotCongruent;")),
                        k.k(q("≭", "&NotCupCap;")),
                        k.k(q("∦", "&NotDoubleVerticalBar;")),
                        k.k(q("∉", "&NotElement;")),
                        k.k(q("≠", "&NotEqual;")),
                        k.k(q("≂̸", "&NotEqualTilde;")),
                        k.k(q("∄", "&NotExists;")),
                        k.k(q("≯", "&NotGreater;")),
                        k.k(q("≱", "&NotGreaterEqual;")),
                        k.k(q("≧̸", "&NotGreaterFullEqual;")),
                        k.k(q("≫̸", "&NotGreaterGreater;")),
                        k.k(q("≹", "&NotGreaterLess;")),
                        k.k(q("⩾̸", "&NotGreaterSlantEqual;")),
                        k.k(q("≵", "&NotGreaterTilde;")),
                        k.k(q("≎̸", "&NotHumpDownHump;")),
                        k.k(q("≏̸", "&NotHumpEqual;")),
                        k.k(q("⋪", "&NotLeftTriangle;")),
                        k.k(q("⧏̸", "&NotLeftTriangleBar;")),
                        k.k(q("⋬", "&NotLeftTriangleEqual;")),
                        k.k(q("≮", "&NotLess;")),
                        k.k(q("≰", "&NotLessEqual;")),
                        k.k(q("≸", "&NotLessGreater;")),
                        k.k(q("≪̸", "&NotLessLess;")),
                        k.k(q("⩽̸", "&NotLessSlantEqual;")),
                        k.k(q("≴", "&NotLessTilde;")),
                        k.k(q("⪢̸", "&NotNestedGreaterGreater;")),
                        k.k(q("⪡̸", "&NotNestedLessLess;")),
                        k.k(q("⊀", "&NotPrecedes;")),
                        k.k(q("⪯̸", "&NotPrecedesEqual;")),
                        k.k(q("⋠", "&NotPrecedesSlantEqual;")),
                        k.k(q("∌", "&NotReverseElement;")),
                        k.k(q("⋫", "&NotRightTriangle;")),
                        k.k(q("⧐̸", "&NotRightTriangleBar;")),
                        k.k(q("⋭", "&NotRightTriangleEqual;")),
                        k.k(q("⊏̸", "&NotSquareSubset;")),
                        k.k(q("⋢", "&NotSquareSubsetEqual;")),
                        k.k(q("⊐̸", "&NotSquareSuperset;")),
                        k.k(q("⋣", "&NotSquareSupersetEqual;")),
                        k.k(q("⊂⃒", "&NotSubset;")),
                        k.k(q("⊈", "&NotSubsetEqual;")),
                        k.k(q("⊁", "&NotSucceeds;")),
                        k.k(q("⪰̸", "&NotSucceedsEqual;")),
                        k.k(q("⋡", "&NotSucceedsSlantEqual;")),
                        k.k(q("≿̸", "&NotSucceedsTilde;")),
                        k.k(q("⊃⃒", "&NotSuperset;")),
                        k.k(q("⊉", "&NotSupersetEqual;")),
                        k.k(q("≁", "&NotTilde;")),
                        k.k(q("≄", "&NotTildeEqual;")),
                        k.k(q("≇", "&NotTildeFullEqual;")),
                        k.k(q("≉", "&NotTildeTilde;")),
                        k.k(q("∤", "&NotVerticalBar;")),
                        k.k(q("𝒩", "&Nscr;")),
                        k.k(q("Ñ", "&Ntilde")),
                        k.k(q("Ñ", "&Ntilde;")),
                        k.k(q("Ν", "&Nu;")),
                        k.k(q("Œ", "&OElig;")),
                        k.k(q("Ó", "&Oacute")),
                        k.k(q("Ó", "&Oacute;")),
                        k.k(q("Ô", "&Ocirc")),
                        k.k(q("Ô", "&Ocirc;")),
                        k.k(q("О", "&Ocy;")),
                        k.k(q("Ő", "&Odblac;")),
                        k.k(q("𝔒", "&Ofr;")),
                        k.k(q("Ò", "&Ograve")),
                        k.k(q("Ò", "&Ograve;")),
                        k.k(q("Ō", "&Omacr;")),
                        k.k(q("Ω", "&Omega;")),
                        k.k(q("Ο", "&Omicron;")),
                        k.k(q("𝕆", "&Oopf;")),
                        k.k(q("“", "&OpenCurlyDoubleQuote;")),
                        k.k(q("‘", "&OpenCurlyQuote;")),
                        k.k(q("⩔", "&Or;")),
                        k.k(q("𝒪", "&Oscr;")),
                        k.k(q("Ø", "&Oslash")),
                        k.k(q("Ø", "&Oslash;")),
                        k.k(q("Õ", "&Otilde")),
                        k.k(q("Õ", "&Otilde;")),
                        k.k(q("⨷", "&Otimes;")),
                        k.k(q("Ö", "&Ouml")),
                        k.k(q("Ö", "&Ouml;")),
                        k.k(q("‾", "&OverBar;")),
                        k.k(q("⏞", "&OverBrace;")),
                        k.k(q("⎴", "&OverBracket;")),
                        k.k(q("⏜", "&OverParenthesis;")),
                        k.k(q("∂", "&PartialD;")),
                        k.k(q("П", "&Pcy;")),
                        k.k(q("𝔓", "&Pfr;")),
                        k.k(q("Φ", "&Phi;")),
                        k.k(q("Π", "&Pi;")),
                        k.k(q("±", "&PlusMinus;")),
                        k.k(q("ℌ", "&Poincareplane;")),
                        k.k(q("ℙ", "&Popf;")),
                        k.k(q("⪻", "&Pr;")),
                        k.k(q("≺", "&Precedes;")),
                        k.k(q("⪯", "&PrecedesEqual;")),
                        k.k(q("≼", "&PrecedesSlantEqual;")),
                        k.k(q("≾", "&PrecedesTilde;")),
                        k.k(q("″", "&Prime;")),
                        k.k(q("∏", "&Product;")),
                        k.k(q("∷", "&Proportion;")),
                        k.k(q("∝", "&Proportional;")),
                        k.k(q("𝒫", "&Pscr;")),
                        k.k(q("Ψ", "&Psi;")),
                        k.k(q('"', "&QUOT")),
                        k.k(q('"', "&QUOT;")),
                        k.k(q("𝔔", "&Qfr;")),
                        k.k(q("ℚ", "&Qopf;")),
                        k.k(q("𝒬", "&Qscr;")),
                        k.k(q("⤐", "&RBarr;")),
                        k.k(q("®", "&REG")),
                        k.k(q("®", "&REG;")),
                        k.k(q("Ŕ", "&Racute;")),
                        k.k(q("⟫", "&Rang;")),
                        k.k(q("↠", "&Rarr;")),
                        k.k(q("⤖", "&Rarrtl;")),
                        k.k(q("Ř", "&Rcaron;")),
                        k.k(q("Ŗ", "&Rcedil;")),
                        k.k(q("Р", "&Rcy;")),
                        k.k(q("ℜ", "&Re;")),
                        k.k(q("∋", "&ReverseElement;")),
                        k.k(q("⇋", "&ReverseEquilibrium;")),
                        k.k(q("⥯", "&ReverseUpEquilibrium;")),
                        k.k(q("ℜ", "&Rfr;")),
                        k.k(q("Ρ", "&Rho;")),
                        k.k(q("⟩", "&RightAngleBracket;")),
                        k.k(q("→", "&RightArrow;")),
                        k.k(q("⇥", "&RightArrowBar;")),
                        k.k(q("⇄", "&RightArrowLeftArrow;")),
                        k.k(q("⌉", "&RightCeiling;")),
                        k.k(q("⟧", "&RightDoubleBracket;")),
                        k.k(q("⥝", "&RightDownTeeVector;")),
                        k.k(q("⇂", "&RightDownVector;")),
                        k.k(q("⥕", "&RightDownVectorBar;")),
                        k.k(q("⌋", "&RightFloor;")),
                        k.k(q("⊢", "&RightTee;")),
                        k.k(q("↦", "&RightTeeArrow;")),
                        k.k(q("⥛", "&RightTeeVector;")),
                        k.k(q("⊳", "&RightTriangle;")),
                        k.k(q("⧐", "&RightTriangleBar;")),
                        k.k(q("⊵", "&RightTriangleEqual;")),
                        k.k(q("⥏", "&RightUpDownVector;")),
                        k.k(q("⥜", "&RightUpTeeVector;")),
                        k.k(q("↾", "&RightUpVector;")),
                        k.k(q("⥔", "&RightUpVectorBar;")),
                        k.k(q("⇀", "&RightVector;")),
                        k.k(q("⥓", "&RightVectorBar;")),
                        k.k(q("⇒", "&Rightarrow;")),
                        k.k(q("ℝ", "&Ropf;")),
                        k.k(q("⥰", "&RoundImplies;")),
                        k.k(q("⇛", "&Rrightarrow;")),
                        k.k(q("ℛ", "&Rscr;")),
                        k.k(q("↱", "&Rsh;")),
                        k.k(q("⧴", "&RuleDelayed;")),
                        k.k(q("Щ", "&SHCHcy;")),
                        k.k(q("Ш", "&SHcy;")),
                        k.k(q("Ь", "&SOFTcy;")),
                        k.k(q("Ś", "&Sacute;")),
                        k.k(q("⪼", "&Sc;")),
                        k.k(q("Š", "&Scaron;")),
                        k.k(q("Ş", "&Scedil;")),
                        k.k(q("Ŝ", "&Scirc;")),
                        k.k(q("С", "&Scy;")),
                        k.k(q("𝔖", "&Sfr;")),
                        k.k(q("↓", "&ShortDownArrow;")),
                        k.k(q("←", "&ShortLeftArrow;")),
                        k.k(q("→", "&ShortRightArrow;")),
                        k.k(q("↑", "&ShortUpArrow;")),
                        k.k(q("Σ", "&Sigma;")),
                        k.k(q("∘", "&SmallCircle;")),
                        k.k(q("𝕊", "&Sopf;")),
                        k.k(q("√", "&Sqrt;")),
                        k.k(q("□", "&Square;")),
                        k.k(q("⊓", "&SquareIntersection;")),
                        k.k(q("⊏", "&SquareSubset;")),
                        k.k(q("⊑", "&SquareSubsetEqual;")),
                        k.k(q("⊐", "&SquareSuperset;")),
                        k.k(q("⊒", "&SquareSupersetEqual;")),
                        k.k(q("⊔", "&SquareUnion;")),
                        k.k(q("𝒮", "&Sscr;")),
                        k.k(q("⋆", "&Star;")),
                        k.k(q("⋐", "&Sub;")),
                        k.k(q("⋐", "&Subset;")),
                        k.k(q("⊆", "&SubsetEqual;")),
                        k.k(q("≻", "&Succeeds;")),
                        k.k(q("⪰", "&SucceedsEqual;")),
                        k.k(q("≽", "&SucceedsSlantEqual;")),
                        k.k(q("≿", "&SucceedsTilde;")),
                        k.k(q("∋", "&SuchThat;")),
                        k.k(q("∑", "&Sum;")),
                        k.k(q("⋑", "&Sup;")),
                        k.k(q("⊃", "&Superset;")),
                        k.k(q("⊇", "&SupersetEqual;")),
                        k.k(q("⋑", "&Supset;")),
                        k.k(q("Þ", "&THORN")),
                        k.k(q("Þ", "&THORN;")),
                        k.k(q("™", "&TRADE;")),
                        k.k(q("Ћ", "&TSHcy;")),
                        k.k(q("Ц", "&TScy;")),
                        k.k(q("\t", "&Tab;")),
                        k.k(q("Τ", "&Tau;")),
                        k.k(q("Ť", "&Tcaron;")),
                        k.k(q("Ţ", "&Tcedil;")),
                        k.k(q("Т", "&Tcy;")),
                        k.k(q("𝔗", "&Tfr;")),
                        k.k(q("∴", "&Therefore;")),
                        k.k(q("Θ", "&Theta;")),
                        k.k(q("  ", "&ThickSpace;")),
                        k.k(q(" ", "&ThinSpace;")),
                        k.k(q("∼", "&Tilde;")),
                        k.k(q("≃", "&TildeEqual;")),
                        k.k(q("≅", "&TildeFullEqual;")),
                        k.k(q("≈", "&TildeTilde;")),
                        k.k(q("𝕋", "&Topf;")),
                        k.k(q("⃛", "&TripleDot;")),
                        k.k(q("𝒯", "&Tscr;")),
                        k.k(q("Ŧ", "&Tstrok;")),
                        k.k(q("Ú", "&Uacute")),
                        k.k(q("Ú", "&Uacute;")),
                        k.k(q("↟", "&Uarr;")),
                        k.k(q("⥉", "&Uarrocir;")),
                        k.k(q("Ў", "&Ubrcy;")),
                        k.k(q("Ŭ", "&Ubreve;")),
                        k.k(q("Û", "&Ucirc")),
                        k.k(q("Û", "&Ucirc;")),
                        k.k(q("У", "&Ucy;")),
                        k.k(q("Ű", "&Udblac;")),
                        k.k(q("𝔘", "&Ufr;")),
                        k.k(q("Ù", "&Ugrave")),
                        k.k(q("Ù", "&Ugrave;")),
                        k.k(q("Ū", "&Umacr;")),
                        k.k(q("_", "&UnderBar;")),
                        k.k(q("⏟", "&UnderBrace;")),
                        k.k(q("⎵", "&UnderBracket;")),
                        k.k(q("⏝", "&UnderParenthesis;")),
                        k.k(q("⋃", "&Union;")),
                        k.k(q("⊎", "&UnionPlus;")),
                        k.k(q("Ų", "&Uogon;")),
                        k.k(q("𝕌", "&Uopf;")),
                        k.k(q("↑", "&UpArrow;")),
                        k.k(q("⤒", "&UpArrowBar;")),
                        k.k(q("⇅", "&UpArrowDownArrow;")),
                        k.k(q("↕", "&UpDownArrow;")),
                        k.k(q("⥮", "&UpEquilibrium;")),
                        k.k(q("⊥", "&UpTee;")),
                        k.k(q("↥", "&UpTeeArrow;")),
                        k.k(q("⇑", "&Uparrow;")),
                        k.k(q("⇕", "&Updownarrow;")),
                        k.k(q("↖", "&UpperLeftArrow;")),
                        k.k(q("↗", "&UpperRightArrow;")),
                        k.k(q("ϒ", "&Upsi;")),
                        k.k(q("Υ", "&Upsilon;")),
                        k.k(q("Ů", "&Uring;")),
                        k.k(q("𝒰", "&Uscr;")),
                        k.k(q("Ũ", "&Utilde;")),
                        k.k(q("Ü", "&Uuml")),
                        k.k(q("Ü", "&Uuml;")),
                        k.k(q("⊫", "&VDash;")),
                        k.k(q("⫫", "&Vbar;")),
                        k.k(q("В", "&Vcy;")),
                        k.k(q("⊩", "&Vdash;")),
                        k.k(q("⫦", "&Vdashl;")),
                        k.k(q("⋁", "&Vee;")),
                        k.k(q("‖", "&Verbar;")),
                        k.k(q("‖", "&Vert;")),
                        k.k(q("∣", "&VerticalBar;")),
                        k.k(q("|", "&VerticalLine;")),
                        k.k(q("❘", "&VerticalSeparator;")),
                        k.k(q("≀", "&VerticalTilde;")),
                        k.k(q(" ", "&VeryThinSpace;")),
                        k.k(q("𝔙", "&Vfr;")),
                        k.k(q("𝕍", "&Vopf;")),
                        k.k(q("𝒱", "&Vscr;")),
                        k.k(q("⊪", "&Vvdash;")),
                        k.k(q("Ŵ", "&Wcirc;")),
                        k.k(q("⋀", "&Wedge;")),
                        k.k(q("𝔚", "&Wfr;")),
                        k.k(q("𝕎", "&Wopf;")),
                        k.k(q("𝒲", "&Wscr;")),
                        k.k(q("𝔛", "&Xfr;")),
                        k.k(q("Ξ", "&Xi;")),
                        k.k(q("𝕏", "&Xopf;")),
                        k.k(q("𝒳", "&Xscr;")),
                        k.k(q("Я", "&YAcy;")),
                        k.k(q("Ї", "&YIcy;")),
                        k.k(q("Ю", "&YUcy;")),
                        k.k(q("Ý", "&Yacute")),
                        k.k(q("Ý", "&Yacute;")),
                        k.k(q("Ŷ", "&Ycirc;")),
                        k.k(q("Ы", "&Ycy;")),
                        k.k(q("𝔜", "&Yfr;")),
                        k.k(q("𝕐", "&Yopf;")),
                        k.k(q("𝒴", "&Yscr;")),
                        k.k(q("Ÿ", "&Yuml;")),
                        k.k(q("Ж", "&ZHcy;")),
                        k.k(q("Ź", "&Zacute;")),
                        k.k(q("Ž", "&Zcaron;")),
                        k.k(q("З", "&Zcy;")),
                        k.k(q("Ż", "&Zdot;")),
                        k.k(q("​", "&ZeroWidthSpace;")),
                        k.k(q("Ζ", "&Zeta;")),
                        k.k(q("ℨ", "&Zfr;")),
                        k.k(q("ℤ", "&Zopf;")),
                        k.k(q("𝒵", "&Zscr;")),
                        k.k(q("á", "&aacute")),
                        k.k(q("á", "&aacute;")),
                        k.k(q("ă", "&abreve;")),
                        k.k(q("∾", "&ac;")),
                        k.k(q("∾̳", "&acE;")),
                        k.k(q("∿", "&acd;")),
                        k.k(q("â", "&acirc")),
                        k.k(q("â", "&acirc;")),
                        k.k(q("´", "&acute")),
                        k.k(q("´", "&acute;")),
                        k.k(q("а", "&acy;")),
                        k.k(q("æ", "&aelig")),
                        k.k(q("æ", "&aelig;")),
                        k.k(q("⁡", "&af;")),
                        k.k(q("𝔞", "&afr;")),
                        k.k(q("à", "&agrave")),
                        k.k(q("à", "&agrave;")),
                        k.k(q("ℵ", "&alefsym;")),
                        k.k(q("ℵ", "&aleph;")),
                        k.k(q("α", "&alpha;")),
                        k.k(q("ā", "&amacr;")),
                        k.k(q("⨿", "&amalg;")),
                        k.k(q("&", "&amp")),
                        k.k(q("&", "&amp;")),
                        k.k(q("∧", "&and;")),
                        k.k(q("⩕", "&andand;")),
                        k.k(q("⩜", "&andd;")),
                        k.k(q("⩘", "&andslope;")),
                        k.k(q("⩚", "&andv;")),
                        k.k(q("∠", "&ang;")),
                        k.k(q("⦤", "&ange;")),
                        k.k(q("∠", "&angle;")),
                        k.k(q("∡", "&angmsd;")),
                        k.k(q("⦨", "&angmsdaa;")),
                        k.k(q("⦩", "&angmsdab;")),
                        k.k(q("⦪", "&angmsdac;")),
                        k.k(q("⦫", "&angmsdad;")),
                        k.k(q("⦬", "&angmsdae;")),
                        k.k(q("⦭", "&angmsdaf;")),
                        k.k(q("⦮", "&angmsdag;")),
                        k.k(q("⦯", "&angmsdah;")),
                        k.k(q("∟", "&angrt;")),
                        k.k(q("⊾", "&angrtvb;")),
                        k.k(q("⦝", "&angrtvbd;")),
                        k.k(q("∢", "&angsph;")),
                        k.k(q("Å", "&angst;")),
                        k.k(q("⍼", "&angzarr;")),
                        k.k(q("ą", "&aogon;")),
                        k.k(q("𝕒", "&aopf;")),
                        k.k(q("≈", "&ap;")),
                        k.k(q("⩰", "&apE;")),
                        k.k(q("⩯", "&apacir;")),
                        k.k(q("≊", "&ape;")),
                        k.k(q("≋", "&apid;")),
                        k.k(q("'", "&apos;")),
                        k.k(q("≈", "&approx;")),
                        k.k(q("≊", "&approxeq;")),
                        k.k(q("å", "&aring")),
                        k.k(q("å", "&aring;")),
                        k.k(q("𝒶", "&ascr;")),
                        k.k(q("*", "&ast;")),
                        k.k(q("≈", "&asymp;")),
                        k.k(q("≍", "&asympeq;")),
                        k.k(q("ã", "&atilde")),
                        k.k(q("ã", "&atilde;")),
                        k.k(q("ä", "&auml")),
                        k.k(q("ä", "&auml;")),
                        k.k(q("∳", "&awconint;")),
                        k.k(q("⨑", "&awint;")),
                        k.k(q("⫭", "&bNot;")),
                        k.k(q("≌", "&backcong;")),
                        k.k(q("϶", "&backepsilon;")),
                        k.k(q("‵", "&backprime;")),
                        k.k(q("∽", "&backsim;")),
                        k.k(q("⋍", "&backsimeq;")),
                        k.k(q("⊽", "&barvee;")),
                        k.k(q("⌅", "&barwed;")),
                        k.k(q("⌅", "&barwedge;")),
                        k.k(q("⎵", "&bbrk;")),
                        k.k(q("⎶", "&bbrktbrk;")),
                        k.k(q("≌", "&bcong;")),
                        k.k(q("б", "&bcy;")),
                        k.k(q("„", "&bdquo;")),
                        k.k(q("∵", "&becaus;")),
                        k.k(q("∵", "&because;")),
                        k.k(q("⦰", "&bemptyv;")),
                        k.k(q("϶", "&bepsi;")),
                        k.k(q("ℬ", "&bernou;")),
                        k.k(q("β", "&beta;")),
                        k.k(q("ℶ", "&beth;")),
                        k.k(q("≬", "&between;")),
                        k.k(q("𝔟", "&bfr;")),
                        k.k(q("⋂", "&bigcap;")),
                        k.k(q("◯", "&bigcirc;")),
                        k.k(q("⋃", "&bigcup;")),
                        k.k(q("⨀", "&bigodot;")),
                        k.k(q("⨁", "&bigoplus;")),
                        k.k(q("⨂", "&bigotimes;")),
                        k.k(q("⨆", "&bigsqcup;")),
                        k.k(q("★", "&bigstar;")),
                        k.k(q("▽", "&bigtriangledown;")),
                        k.k(q("△", "&bigtriangleup;")),
                        k.k(q("⨄", "&biguplus;")),
                        k.k(q("⋁", "&bigvee;")),
                        k.k(q("⋀", "&bigwedge;")),
                        k.k(q("⤍", "&bkarow;")),
                        k.k(q("⧫", "&blacklozenge;")),
                        k.k(q("▪", "&blacksquare;")),
                        k.k(q("▴", "&blacktriangle;")),
                        k.k(q("▾", "&blacktriangledown;")),
                        k.k(q("◂", "&blacktriangleleft;")),
                        k.k(q("▸", "&blacktriangleright;")),
                        k.k(q("␣", "&blank;")),
                        k.k(q("▒", "&blk12;")),
                        k.k(q("░", "&blk14;")),
                        k.k(q("▓", "&blk34;")),
                        k.k(q("█", "&block;")),
                        k.k(q("=⃥", "&bne;")),
                        k.k(q("≡⃥", "&bnequiv;")),
                        k.k(q("⌐", "&bnot;")),
                        k.k(q("𝕓", "&bopf;")),
                        k.k(q("⊥", "&bot;")),
                        k.k(q("⊥", "&bottom;")),
                        k.k(q("⋈", "&bowtie;")),
                        k.k(q("╗", "&boxDL;")),
                        k.k(q("╔", "&boxDR;")),
                        k.k(q("╖", "&boxDl;")),
                        k.k(q("╓", "&boxDr;")),
                        k.k(q("═", "&boxH;")),
                        k.k(q("╦", "&boxHD;")),
                        k.k(q("╩", "&boxHU;")),
                        k.k(q("╤", "&boxHd;")),
                        k.k(q("╧", "&boxHu;")),
                        k.k(q("╝", "&boxUL;")),
                        k.k(q("╚", "&boxUR;")),
                        k.k(q("╜", "&boxUl;")),
                        k.k(q("╙", "&boxUr;")),
                        k.k(q("║", "&boxV;")),
                        k.k(q("╬", "&boxVH;")),
                        k.k(q("╣", "&boxVL;")),
                        k.k(q("╠", "&boxVR;")),
                        k.k(q("╫", "&boxVh;")),
                        k.k(q("╢", "&boxVl;")),
                        k.k(q("╟", "&boxVr;")),
                        k.k(q("⧉", "&boxbox;")),
                        k.k(q("╕", "&boxdL;")),
                        k.k(q("╒", "&boxdR;")),
                        k.k(q("┐", "&boxdl;")),
                        k.k(q("┌", "&boxdr;")),
                        k.k(q("─", "&boxh;")),
                        k.k(q("╥", "&boxhD;")),
                        k.k(q("╨", "&boxhU;")),
                        k.k(q("┬", "&boxhd;")),
                        k.k(q("┴", "&boxhu;")),
                        k.k(q("⊟", "&boxminus;")),
                        k.k(q("⊞", "&boxplus;")),
                        k.k(q("⊠", "&boxtimes;")),
                        k.k(q("╛", "&boxuL;")),
                        k.k(q("╘", "&boxuR;")),
                        k.k(q("┘", "&boxul;")),
                        k.k(q("└", "&boxur;")),
                        k.k(q("│", "&boxv;")),
                        k.k(q("╪", "&boxvH;")),
                        k.k(q("╡", "&boxvL;")),
                        k.k(q("╞", "&boxvR;")),
                        k.k(q("┼", "&boxvh;"));
                    k.k(q("┤", "&boxvl;")),
                        k.k(q("├", "&boxvr;")),
                        k.k(q("‵", "&bprime;")),
                        k.k(q("˘", "&breve;")),
                        k.k(q("¦", "&brvbar")),
                        k.k(q("¦", "&brvbar;")),
                        k.k(q("𝒷", "&bscr;")),
                        k.k(q("⁏", "&bsemi;")),
                        k.k(q("∽", "&bsim;")),
                        k.k(q("⋍", "&bsime;")),
                        k.k(q("\\", "&bsol;")),
                        k.k(q("⧅", "&bsolb;")),
                        k.k(q("⟈", "&bsolhsub;")),
                        k.k(q("•", "&bull;")),
                        k.k(q("•", "&bullet;")),
                        k.k(q("≎", "&bump;")),
                        k.k(q("⪮", "&bumpE;")),
                        k.k(q("≏", "&bumpe;")),
                        k.k(q("≏", "&bumpeq;")),
                        k.k(q("ć", "&cacute;")),
                        k.k(q("∩", "&cap;")),
                        k.k(q("⩄", "&capand;")),
                        k.k(q("⩉", "&capbrcup;")),
                        k.k(q("⩋", "&capcap;")),
                        k.k(q("⩇", "&capcup;")),
                        k.k(q("⩀", "&capdot;")),
                        k.k(q("∩︀", "&caps;")),
                        k.k(q("⁁", "&caret;")),
                        k.k(q("ˇ", "&caron;")),
                        k.k(q("⩍", "&ccaps;")),
                        k.k(q("č", "&ccaron;")),
                        k.k(q("ç", "&ccedil")),
                        k.k(q("ç", "&ccedil;")),
                        k.k(q("ĉ", "&ccirc;")),
                        k.k(q("⩌", "&ccups;")),
                        k.k(q("⩐", "&ccupssm;")),
                        k.k(q("ċ", "&cdot;")),
                        k.k(q("¸", "&cedil")),
                        k.k(q("¸", "&cedil;")),
                        k.k(q("⦲", "&cemptyv;")),
                        k.k(q("¢", "&cent")),
                        k.k(q("¢", "&cent;")),
                        k.k(q("·", "&centerdot;")),
                        k.k(q("𝔠", "&cfr;")),
                        k.k(q("ч", "&chcy;")),
                        k.k(q("✓", "&check;")),
                        k.k(q("✓", "&checkmark;")),
                        k.k(q("χ", "&chi;")),
                        k.k(q("○", "&cir;")),
                        k.k(q("⧃", "&cirE;")),
                        k.k(q("ˆ", "&circ;")),
                        k.k(q("≗", "&circeq;")),
                        k.k(q("↺", "&circlearrowleft;")),
                        k.k(q("↻", "&circlearrowright;")),
                        k.k(q("®", "&circledR;")),
                        k.k(q("Ⓢ", "&circledS;")),
                        k.k(q("⊛", "&circledast;")),
                        k.k(q("⊚", "&circledcirc;")),
                        k.k(q("⊝", "&circleddash;")),
                        k.k(q("≗", "&cire;")),
                        k.k(q("⨐", "&cirfnint;")),
                        k.k(q("⫯", "&cirmid;")),
                        k.k(q("⧂", "&cirscir;")),
                        k.k(q("♣", "&clubs;")),
                        k.k(q("♣", "&clubsuit;")),
                        k.k(q(":", "&colon;")),
                        k.k(q("≔", "&colone;")),
                        k.k(q("≔", "&coloneq;")),
                        k.k(q(",", "&comma;")),
                        k.k(q("@", "&commat;")),
                        k.k(q("∁", "&comp;")),
                        k.k(q("∘", "&compfn;")),
                        k.k(q("∁", "&complement;")),
                        k.k(q("ℂ", "&complexes;")),
                        k.k(q("≅", "&cong;")),
                        k.k(q("⩭", "&congdot;")),
                        k.k(q("∮", "&conint;")),
                        k.k(q("𝕔", "&copf;")),
                        k.k(q("∐", "&coprod;")),
                        k.k(q("©", "&copy")),
                        k.k(q("©", "&copy;")),
                        k.k(q("℗", "&copysr;")),
                        k.k(q("↵", "&crarr;")),
                        k.k(q("✗", "&cross;")),
                        k.k(q("𝒸", "&cscr;")),
                        k.k(q("⫏", "&csub;")),
                        k.k(q("⫑", "&csube;")),
                        k.k(q("⫐", "&csup;")),
                        k.k(q("⫒", "&csupe;")),
                        k.k(q("⋯", "&ctdot;")),
                        k.k(q("⤸", "&cudarrl;")),
                        k.k(q("⤵", "&cudarrr;")),
                        k.k(q("⋞", "&cuepr;")),
                        k.k(q("⋟", "&cuesc;")),
                        k.k(q("↶", "&cularr;")),
                        k.k(q("⤽", "&cularrp;")),
                        k.k(q("∪", "&cup;")),
                        k.k(q("⩈", "&cupbrcap;")),
                        k.k(q("⩆", "&cupcap;")),
                        k.k(q("⩊", "&cupcup;")),
                        k.k(q("⊍", "&cupdot;")),
                        k.k(q("⩅", "&cupor;")),
                        k.k(q("∪︀", "&cups;")),
                        k.k(q("↷", "&curarr;")),
                        k.k(q("⤼", "&curarrm;")),
                        k.k(q("⋞", "&curlyeqprec;")),
                        k.k(q("⋟", "&curlyeqsucc;")),
                        k.k(q("⋎", "&curlyvee;")),
                        k.k(q("⋏", "&curlywedge;")),
                        k.k(q("¤", "&curren")),
                        k.k(q("¤", "&curren;")),
                        k.k(q("↶", "&curvearrowleft;")),
                        k.k(q("↷", "&curvearrowright;")),
                        k.k(q("⋎", "&cuvee;")),
                        k.k(q("⋏", "&cuwed;")),
                        k.k(q("∲", "&cwconint;")),
                        k.k(q("∱", "&cwint;")),
                        k.k(q("⌭", "&cylcty;")),
                        k.k(q("⇓", "&dArr;")),
                        k.k(q("⥥", "&dHar;")),
                        k.k(q("†", "&dagger;")),
                        k.k(q("ℸ", "&daleth;")),
                        k.k(q("↓", "&darr;")),
                        k.k(q("‐", "&dash;")),
                        k.k(q("⊣", "&dashv;")),
                        k.k(q("⤏", "&dbkarow;")),
                        k.k(q("˝", "&dblac;")),
                        k.k(q("ď", "&dcaron;")),
                        k.k(q("д", "&dcy;")),
                        k.k(q("ⅆ", "&dd;")),
                        k.k(q("‡", "&ddagger;")),
                        k.k(q("⇊", "&ddarr;")),
                        k.k(q("⩷", "&ddotseq;")),
                        k.k(q("°", "&deg")),
                        k.k(q("°", "&deg;")),
                        k.k(q("δ", "&delta;")),
                        k.k(q("⦱", "&demptyv;")),
                        k.k(q("⥿", "&dfisht;")),
                        k.k(q("𝔡", "&dfr;")),
                        k.k(q("⇃", "&dharl;")),
                        k.k(q("⇂", "&dharr;")),
                        k.k(q("⋄", "&diam;")),
                        k.k(q("⋄", "&diamond;")),
                        k.k(q("♦", "&diamondsuit;")),
                        k.k(q("♦", "&diams;")),
                        k.k(q("¨", "&die;")),
                        k.k(q("ϝ", "&digamma;")),
                        k.k(q("⋲", "&disin;")),
                        k.k(q("÷", "&div;")),
                        k.k(q("÷", "&divide")),
                        k.k(q("÷", "&divide;")),
                        k.k(q("⋇", "&divideontimes;")),
                        k.k(q("⋇", "&divonx;")),
                        k.k(q("ђ", "&djcy;")),
                        k.k(q("⌞", "&dlcorn;")),
                        k.k(q("⌍", "&dlcrop;")),
                        k.k(q("$", "&dollar;")),
                        k.k(q("𝕕", "&dopf;")),
                        k.k(q("˙", "&dot;")),
                        k.k(q("≐", "&doteq;")),
                        k.k(q("≑", "&doteqdot;")),
                        k.k(q("∸", "&dotminus;")),
                        k.k(q("∔", "&dotplus;")),
                        k.k(q("⊡", "&dotsquare;")),
                        k.k(q("⌆", "&doublebarwedge;")),
                        k.k(q("↓", "&downarrow;")),
                        k.k(q("⇊", "&downdownarrows;")),
                        k.k(q("⇃", "&downharpoonleft;")),
                        k.k(q("⇂", "&downharpoonright;")),
                        k.k(q("⤐", "&drbkarow;")),
                        k.k(q("⌟", "&drcorn;")),
                        k.k(q("⌌", "&drcrop;")),
                        k.k(q("𝒹", "&dscr;")),
                        k.k(q("ѕ", "&dscy;")),
                        k.k(q("⧶", "&dsol;")),
                        k.k(q("đ", "&dstrok;")),
                        k.k(q("⋱", "&dtdot;")),
                        k.k(q("▿", "&dtri;")),
                        k.k(q("▾", "&dtrif;")),
                        k.k(q("⇵", "&duarr;")),
                        k.k(q("⥯", "&duhar;")),
                        k.k(q("⦦", "&dwangle;")),
                        k.k(q("џ", "&dzcy;")),
                        k.k(q("⟿", "&dzigrarr;")),
                        k.k(q("⩷", "&eDDot;")),
                        k.k(q("≑", "&eDot;")),
                        k.k(q("é", "&eacute")),
                        k.k(q("é", "&eacute;")),
                        k.k(q("⩮", "&easter;")),
                        k.k(q("ě", "&ecaron;")),
                        k.k(q("≖", "&ecir;")),
                        k.k(q("ê", "&ecirc")),
                        k.k(q("ê", "&ecirc;")),
                        k.k(q("≕", "&ecolon;")),
                        k.k(q("э", "&ecy;")),
                        k.k(q("ė", "&edot;")),
                        k.k(q("ⅇ", "&ee;")),
                        k.k(q("≒", "&efDot;")),
                        k.k(q("𝔢", "&efr;")),
                        k.k(q("⪚", "&eg;")),
                        k.k(q("è", "&egrave")),
                        k.k(q("è", "&egrave;")),
                        k.k(q("⪖", "&egs;")),
                        k.k(q("⪘", "&egsdot;")),
                        k.k(q("⪙", "&el;")),
                        k.k(q("⏧", "&elinters;")),
                        k.k(q("ℓ", "&ell;")),
                        k.k(q("⪕", "&els;")),
                        k.k(q("⪗", "&elsdot;")),
                        k.k(q("ē", "&emacr;")),
                        k.k(q("∅", "&empty;")),
                        k.k(q("∅", "&emptyset;")),
                        k.k(q("∅", "&emptyv;")),
                        k.k(q(" ", "&emsp13;")),
                        k.k(q(" ", "&emsp14;")),
                        k.k(q(" ", "&emsp;")),
                        k.k(q("ŋ", "&eng;")),
                        k.k(q(" ", "&ensp;")),
                        k.k(q("ę", "&eogon;")),
                        k.k(q("𝕖", "&eopf;")),
                        k.k(q("⋕", "&epar;")),
                        k.k(q("⧣", "&eparsl;")),
                        k.k(q("⩱", "&eplus;")),
                        k.k(q("ε", "&epsi;")),
                        k.k(q("ε", "&epsilon;")),
                        k.k(q("ϵ", "&epsiv;")),
                        k.k(q("≖", "&eqcirc;")),
                        k.k(q("≕", "&eqcolon;")),
                        k.k(q("≂", "&eqsim;")),
                        k.k(q("⪖", "&eqslantgtr;")),
                        k.k(q("⪕", "&eqslantless;")),
                        k.k(q("=", "&equals;")),
                        k.k(q("≟", "&equest;")),
                        k.k(q("≡", "&equiv;")),
                        k.k(q("⩸", "&equivDD;")),
                        k.k(q("⧥", "&eqvparsl;")),
                        k.k(q("≓", "&erDot;")),
                        k.k(q("⥱", "&erarr;")),
                        k.k(q("ℯ", "&escr;")),
                        k.k(q("≐", "&esdot;")),
                        k.k(q("≂", "&esim;")),
                        k.k(q("η", "&eta;")),
                        k.k(q("ð", "&eth")),
                        k.k(q("ð", "&eth;")),
                        k.k(q("ë", "&euml")),
                        k.k(q("ë", "&euml;")),
                        k.k(q("€", "&euro;")),
                        k.k(q("!", "&excl;")),
                        k.k(q("∃", "&exist;")),
                        k.k(q("ℰ", "&expectation;")),
                        k.k(q("ⅇ", "&exponentiale;")),
                        k.k(q("≒", "&fallingdotseq;")),
                        k.k(q("ф", "&fcy;")),
                        k.k(q("♀", "&female;")),
                        k.k(q("ﬃ", "&ffilig;")),
                        k.k(q("ﬀ", "&fflig;")),
                        k.k(q("ﬄ", "&ffllig;")),
                        k.k(q("𝔣", "&ffr;")),
                        k.k(q("ﬁ", "&filig;")),
                        k.k(q("fj", "&fjlig;")),
                        k.k(q("♭", "&flat;")),
                        k.k(q("ﬂ", "&fllig;")),
                        k.k(q("▱", "&fltns;")),
                        k.k(q("ƒ", "&fnof;")),
                        k.k(q("𝕗", "&fopf;")),
                        k.k(q("∀", "&forall;")),
                        k.k(q("⋔", "&fork;")),
                        k.k(q("⫙", "&forkv;")),
                        k.k(q("⨍", "&fpartint;")),
                        k.k(q("½", "&frac12")),
                        k.k(q("½", "&frac12;")),
                        k.k(q("⅓", "&frac13;")),
                        k.k(q("¼", "&frac14")),
                        k.k(q("¼", "&frac14;")),
                        k.k(q("⅕", "&frac15;")),
                        k.k(q("⅙", "&frac16;")),
                        k.k(q("⅛", "&frac18;")),
                        k.k(q("⅔", "&frac23;")),
                        k.k(q("⅖", "&frac25;")),
                        k.k(q("¾", "&frac34")),
                        k.k(q("¾", "&frac34;")),
                        k.k(q("⅗", "&frac35;")),
                        k.k(q("⅜", "&frac38;")),
                        k.k(q("⅘", "&frac45;")),
                        k.k(q("⅚", "&frac56;")),
                        k.k(q("⅝", "&frac58;")),
                        k.k(q("⅞", "&frac78;")),
                        k.k(q("⁄", "&frasl;")),
                        k.k(q("⌢", "&frown;")),
                        k.k(q("𝒻", "&fscr;")),
                        k.k(q("≧", "&gE;")),
                        k.k(q("⪌", "&gEl;")),
                        k.k(q("ǵ", "&gacute;")),
                        k.k(q("γ", "&gamma;")),
                        k.k(q("ϝ", "&gammad;")),
                        k.k(q("⪆", "&gap;")),
                        k.k(q("ğ", "&gbreve;")),
                        k.k(q("ĝ", "&gcirc;")),
                        k.k(q("г", "&gcy;")),
                        k.k(q("ġ", "&gdot;")),
                        k.k(q("≥", "&ge;")),
                        k.k(q("⋛", "&gel;")),
                        k.k(q("≥", "&geq;")),
                        k.k(q("≧", "&geqq;")),
                        k.k(q("⩾", "&geqslant;")),
                        k.k(q("⩾", "&ges;")),
                        k.k(q("⪩", "&gescc;")),
                        k.k(q("⪀", "&gesdot;")),
                        k.k(q("⪂", "&gesdoto;")),
                        k.k(q("⪄", "&gesdotol;")),
                        k.k(q("⋛︀", "&gesl;")),
                        k.k(q("⪔", "&gesles;")),
                        k.k(q("𝔤", "&gfr;")),
                        k.k(q("≫", "&gg;")),
                        k.k(q("⋙", "&ggg;")),
                        k.k(q("ℷ", "&gimel;")),
                        k.k(q("ѓ", "&gjcy;")),
                        k.k(q("≷", "&gl;")),
                        k.k(q("⪒", "&glE;")),
                        k.k(q("⪥", "&gla;")),
                        k.k(q("⪤", "&glj;")),
                        k.k(q("≩", "&gnE;")),
                        k.k(q("⪊", "&gnap;")),
                        k.k(q("⪊", "&gnapprox;")),
                        k.k(q("⪈", "&gne;")),
                        k.k(q("⪈", "&gneq;")),
                        k.k(q("≩", "&gneqq;")),
                        k.k(q("⋧", "&gnsim;")),
                        k.k(q("𝕘", "&gopf;")),
                        k.k(q("`", "&grave;")),
                        k.k(q("ℊ", "&gscr;")),
                        k.k(q("≳", "&gsim;")),
                        k.k(q("⪎", "&gsime;")),
                        k.k(q("⪐", "&gsiml;")),
                        k.k(q(">", "&gt")),
                        k.k(q(">", "&gt;")),
                        k.k(q("⪧", "&gtcc;")),
                        k.k(q("⩺", "&gtcir;")),
                        k.k(q("⋗", "&gtdot;")),
                        k.k(q("⦕", "&gtlPar;")),
                        k.k(q("⩼", "&gtquest;")),
                        k.k(q("⪆", "&gtrapprox;")),
                        k.k(q("⥸", "&gtrarr;")),
                        k.k(q("⋗", "&gtrdot;")),
                        k.k(q("⋛", "&gtreqless;")),
                        k.k(q("⪌", "&gtreqqless;")),
                        k.k(q("≷", "&gtrless;")),
                        k.k(q("≳", "&gtrsim;")),
                        k.k(q("≩︀", "&gvertneqq;")),
                        k.k(q("≩︀", "&gvnE;")),
                        k.k(q("⇔", "&hArr;")),
                        k.k(q(" ", "&hairsp;")),
                        k.k(q("½", "&half;")),
                        k.k(q("ℋ", "&hamilt;")),
                        k.k(q("ъ", "&hardcy;")),
                        k.k(q("↔", "&harr;")),
                        k.k(q("⥈", "&harrcir;")),
                        k.k(q("↭", "&harrw;")),
                        k.k(q("ℏ", "&hbar;")),
                        k.k(q("ĥ", "&hcirc;")),
                        k.k(q("♥", "&hearts;")),
                        k.k(q("♥", "&heartsuit;")),
                        k.k(q("…", "&hellip;")),
                        k.k(q("⊹", "&hercon;")),
                        k.k(q("𝔥", "&hfr;")),
                        k.k(q("⤥", "&hksearow;")),
                        k.k(q("⤦", "&hkswarow;")),
                        k.k(q("⇿", "&hoarr;")),
                        k.k(q("∻", "&homtht;")),
                        k.k(q("↩", "&hookleftarrow;")),
                        k.k(q("↪", "&hookrightarrow;")),
                        k.k(q("𝕙", "&hopf;")),
                        k.k(q("―", "&horbar;")),
                        k.k(q("𝒽", "&hscr;")),
                        k.k(q("ℏ", "&hslash;")),
                        k.k(q("ħ", "&hstrok;")),
                        k.k(q("⁃", "&hybull;")),
                        k.k(q("‐", "&hyphen;")),
                        k.k(q("í", "&iacute")),
                        k.k(q("í", "&iacute;")),
                        k.k(q("⁣", "&ic;")),
                        k.k(q("î", "&icirc")),
                        k.k(q("î", "&icirc;")),
                        k.k(q("и", "&icy;")),
                        k.k(q("е", "&iecy;")),
                        k.k(q("¡", "&iexcl")),
                        k.k(q("¡", "&iexcl;")),
                        k.k(q("⇔", "&iff;")),
                        k.k(q("𝔦", "&ifr;")),
                        k.k(q("ì", "&igrave")),
                        k.k(q("ì", "&igrave;")),
                        k.k(q("ⅈ", "&ii;")),
                        k.k(q("⨌", "&iiiint;")),
                        k.k(q("∭", "&iiint;")),
                        k.k(q("⧜", "&iinfin;")),
                        k.k(q("℩", "&iiota;")),
                        k.k(q("ĳ", "&ijlig;")),
                        k.k(q("ī", "&imacr;")),
                        k.k(q("ℑ", "&image;")),
                        k.k(q("ℐ", "&imagline;")),
                        k.k(q("ℑ", "&imagpart;")),
                        k.k(q("ı", "&imath;")),
                        k.k(q("⊷", "&imof;")),
                        k.k(q("Ƶ", "&imped;")),
                        k.k(q("∈", "&in;")),
                        k.k(q("℅", "&incare;")),
                        k.k(q("∞", "&infin;")),
                        k.k(q("⧝", "&infintie;")),
                        k.k(q("ı", "&inodot;")),
                        k.k(q("∫", "&int;")),
                        k.k(q("⊺", "&intcal;")),
                        k.k(q("ℤ", "&integers;")),
                        k.k(q("⊺", "&intercal;")),
                        k.k(q("⨗", "&intlarhk;")),
                        k.k(q("⨼", "&intprod;")),
                        k.k(q("ё", "&iocy;")),
                        k.k(q("į", "&iogon;")),
                        k.k(q("𝕚", "&iopf;")),
                        k.k(q("ι", "&iota;")),
                        k.k(q("⨼", "&iprod;")),
                        k.k(q("¿", "&iquest")),
                        k.k(q("¿", "&iquest;")),
                        k.k(q("𝒾", "&iscr;")),
                        k.k(q("∈", "&isin;")),
                        k.k(q("⋹", "&isinE;")),
                        k.k(q("⋵", "&isindot;")),
                        k.k(q("⋴", "&isins;")),
                        k.k(q("⋳", "&isinsv;")),
                        k.k(q("∈", "&isinv;")),
                        k.k(q("⁢", "&it;")),
                        k.k(q("ĩ", "&itilde;")),
                        k.k(q("і", "&iukcy;")),
                        k.k(q("ï", "&iuml")),
                        k.k(q("ï", "&iuml;")),
                        k.k(q("ĵ", "&jcirc;")),
                        k.k(q("й", "&jcy;")),
                        k.k(q("𝔧", "&jfr;")),
                        k.k(q("ȷ", "&jmath;")),
                        k.k(q("𝕛", "&jopf;")),
                        k.k(q("𝒿", "&jscr;")),
                        k.k(q("ј", "&jsercy;")),
                        k.k(q("є", "&jukcy;")),
                        k.k(q("κ", "&kappa;")),
                        k.k(q("ϰ", "&kappav;")),
                        k.k(q("ķ", "&kcedil;")),
                        k.k(q("к", "&kcy;")),
                        k.k(q("𝔨", "&kfr;")),
                        k.k(q("ĸ", "&kgreen;")),
                        k.k(q("х", "&khcy;")),
                        k.k(q("ќ", "&kjcy;")),
                        k.k(q("𝕜", "&kopf;")),
                        k.k(q("𝓀", "&kscr;")),
                        k.k(q("⇚", "&lAarr;")),
                        k.k(q("⇐", "&lArr;")),
                        k.k(q("⤛", "&lAtail;")),
                        k.k(q("⤎", "&lBarr;")),
                        k.k(q("≦", "&lE;")),
                        k.k(q("⪋", "&lEg;")),
                        k.k(q("⥢", "&lHar;")),
                        k.k(q("ĺ", "&lacute;")),
                        k.k(q("⦴", "&laemptyv;")),
                        k.k(q("ℒ", "&lagran;")),
                        k.k(q("λ", "&lambda;")),
                        k.k(q("⟨", "&lang;")),
                        k.k(q("⦑", "&langd;")),
                        k.k(q("⟨", "&langle;")),
                        k.k(q("⪅", "&lap;")),
                        k.k(q("«", "&laquo")),
                        k.k(q("«", "&laquo;")),
                        k.k(q("←", "&larr;")),
                        k.k(q("⇤", "&larrb;")),
                        k.k(q("⤟", "&larrbfs;")),
                        k.k(q("⤝", "&larrfs;")),
                        k.k(q("↩", "&larrhk;")),
                        k.k(q("↫", "&larrlp;")),
                        k.k(q("⤹", "&larrpl;")),
                        k.k(q("⥳", "&larrsim;")),
                        k.k(q("↢", "&larrtl;")),
                        k.k(q("⪫", "&lat;")),
                        k.k(q("⤙", "&latail;")),
                        k.k(q("⪭", "&late;")),
                        k.k(q("⪭︀", "&lates;")),
                        k.k(q("⤌", "&lbarr;")),
                        k.k(q("❲", "&lbbrk;")),
                        k.k(q("{", "&lbrace;")),
                        k.k(q("[", "&lbrack;")),
                        k.k(q("⦋", "&lbrke;")),
                        k.k(q("⦏", "&lbrksld;")),
                        k.k(q("⦍", "&lbrkslu;")),
                        k.k(q("ľ", "&lcaron;")),
                        k.k(q("ļ", "&lcedil;")),
                        k.k(q("⌈", "&lceil;")),
                        k.k(q("{", "&lcub;")),
                        k.k(q("л", "&lcy;")),
                        k.k(q("⤶", "&ldca;")),
                        k.k(q("“", "&ldquo;")),
                        k.k(q("„", "&ldquor;")),
                        k.k(q("⥧", "&ldrdhar;")),
                        k.k(q("⥋", "&ldrushar;")),
                        k.k(q("↲", "&ldsh;")),
                        k.k(q("≤", "&le;")),
                        k.k(q("←", "&leftarrow;")),
                        k.k(q("↢", "&leftarrowtail;")),
                        k.k(q("↽", "&leftharpoondown;")),
                        k.k(q("↼", "&leftharpoonup;")),
                        k.k(q("⇇", "&leftleftarrows;")),
                        k.k(q("↔", "&leftrightarrow;")),
                        k.k(q("⇆", "&leftrightarrows;")),
                        k.k(q("⇋", "&leftrightharpoons;")),
                        k.k(q("↭", "&leftrightsquigarrow;")),
                        k.k(q("⋋", "&leftthreetimes;")),
                        k.k(q("⋚", "&leg;")),
                        k.k(q("≤", "&leq;")),
                        k.k(q("≦", "&leqq;")),
                        k.k(q("⩽", "&leqslant;")),
                        k.k(q("⩽", "&les;")),
                        k.k(q("⪨", "&lescc;")),
                        k.k(q("⩿", "&lesdot;")),
                        k.k(q("⪁", "&lesdoto;")),
                        k.k(q("⪃", "&lesdotor;")),
                        k.k(q("⋚︀", "&lesg;")),
                        k.k(q("⪓", "&lesges;")),
                        k.k(q("⪅", "&lessapprox;")),
                        k.k(q("⋖", "&lessdot;")),
                        k.k(q("⋚", "&lesseqgtr;")),
                        k.k(q("⪋", "&lesseqqgtr;")),
                        k.k(q("≶", "&lessgtr;")),
                        k.k(q("≲", "&lesssim;")),
                        k.k(q("⥼", "&lfisht;")),
                        k.k(q("⌊", "&lfloor;")),
                        k.k(q("𝔩", "&lfr;")),
                        k.k(q("≶", "&lg;")),
                        k.k(q("⪑", "&lgE;")),
                        k.k(q("↽", "&lhard;")),
                        k.k(q("↼", "&lharu;")),
                        k.k(q("⥪", "&lharul;")),
                        k.k(q("▄", "&lhblk;")),
                        k.k(q("љ", "&ljcy;")),
                        k.k(q("≪", "&ll;")),
                        k.k(q("⇇", "&llarr;")),
                        k.k(q("⌞", "&llcorner;")),
                        k.k(q("⥫", "&llhard;")),
                        k.k(q("◺", "&lltri;")),
                        k.k(q("ŀ", "&lmidot;")),
                        k.k(q("⎰", "&lmoust;")),
                        k.k(q("⎰", "&lmoustache;")),
                        k.k(q("≨", "&lnE;")),
                        k.k(q("⪉", "&lnap;")),
                        k.k(q("⪉", "&lnapprox;")),
                        k.k(q("⪇", "&lne;")),
                        k.k(q("⪇", "&lneq;")),
                        k.k(q("≨", "&lneqq;")),
                        k.k(q("⋦", "&lnsim;")),
                        k.k(q("⟬", "&loang;")),
                        k.k(q("⇽", "&loarr;")),
                        k.k(q("⟦", "&lobrk;")),
                        k.k(q("⟵", "&longleftarrow;")),
                        k.k(q("⟷", "&longleftrightarrow;")),
                        k.k(q("⟼", "&longmapsto;")),
                        k.k(q("⟶", "&longrightarrow;")),
                        k.k(q("↫", "&looparrowleft;")),
                        k.k(q("↬", "&looparrowright;")),
                        k.k(q("⦅", "&lopar;")),
                        k.k(q("𝕝", "&lopf;")),
                        k.k(q("⨭", "&loplus;")),
                        k.k(q("⨴", "&lotimes;")),
                        k.k(q("∗", "&lowast;")),
                        k.k(q("_", "&lowbar;")),
                        k.k(q("◊", "&loz;")),
                        k.k(q("◊", "&lozenge;")),
                        k.k(q("⧫", "&lozf;")),
                        k.k(q("(", "&lpar;")),
                        k.k(q("⦓", "&lparlt;")),
                        k.k(q("⇆", "&lrarr;")),
                        k.k(q("⌟", "&lrcorner;")),
                        k.k(q("⇋", "&lrhar;")),
                        k.k(q("⥭", "&lrhard;")),
                        k.k(q("‎", "&lrm;")),
                        k.k(q("⊿", "&lrtri;")),
                        k.k(q("‹", "&lsaquo;")),
                        k.k(q("𝓁", "&lscr;")),
                        k.k(q("↰", "&lsh;")),
                        k.k(q("≲", "&lsim;")),
                        k.k(q("⪍", "&lsime;")),
                        k.k(q("⪏", "&lsimg;")),
                        k.k(q("[", "&lsqb;")),
                        k.k(q("‘", "&lsquo;")),
                        k.k(q("‚", "&lsquor;")),
                        k.k(q("ł", "&lstrok;")),
                        k.k(q("<", "&lt")),
                        k.k(q("<", "&lt;")),
                        k.k(q("⪦", "&ltcc;")),
                        k.k(q("⩹", "&ltcir;")),
                        k.k(q("⋖", "&ltdot;")),
                        k.k(q("⋋", "&lthree;")),
                        k.k(q("⋉", "&ltimes;")),
                        k.k(q("⥶", "&ltlarr;")),
                        k.k(q("⩻", "&ltquest;")),
                        k.k(q("⦖", "&ltrPar;")),
                        k.k(q("◃", "&ltri;")),
                        k.k(q("⊴", "&ltrie;")),
                        k.k(q("◂", "&ltrif;")),
                        k.k(q("⥊", "&lurdshar;")),
                        k.k(q("⥦", "&luruhar;")),
                        k.k(q("≨︀", "&lvertneqq;")),
                        k.k(q("≨︀", "&lvnE;")),
                        k.k(q("∺", "&mDDot;")),
                        k.k(q("¯", "&macr")),
                        k.k(q("¯", "&macr;")),
                        k.k(q("♂", "&male;")),
                        k.k(q("✠", "&malt;")),
                        k.k(q("✠", "&maltese;")),
                        k.k(q("↦", "&map;")),
                        k.k(q("↦", "&mapsto;")),
                        k.k(q("↧", "&mapstodown;")),
                        k.k(q("↤", "&mapstoleft;")),
                        k.k(q("↥", "&mapstoup;")),
                        k.k(q("▮", "&marker;")),
                        k.k(q("⨩", "&mcomma;")),
                        k.k(q("м", "&mcy;")),
                        k.k(q("—", "&mdash;")),
                        k.k(q("∡", "&measuredangle;")),
                        k.k(q("𝔪", "&mfr;")),
                        k.k(q("℧", "&mho;")),
                        k.k(q("µ", "&micro")),
                        k.k(q("µ", "&micro;")),
                        k.k(q("∣", "&mid;")),
                        k.k(q("*", "&midast;")),
                        k.k(q("⫰", "&midcir;")),
                        k.k(q("·", "&middot")),
                        k.k(q("·", "&middot;")),
                        k.k(q("−", "&minus;")),
                        k.k(q("⊟", "&minusb;")),
                        k.k(q("∸", "&minusd;")),
                        k.k(q("⨪", "&minusdu;")),
                        k.k(q("⫛", "&mlcp;")),
                        k.k(q("…", "&mldr;")),
                        k.k(q("∓", "&mnplus;")),
                        k.k(q("⊧", "&models;")),
                        k.k(q("𝕞", "&mopf;")),
                        k.k(q("∓", "&mp;")),
                        k.k(q("𝓂", "&mscr;")),
                        k.k(q("∾", "&mstpos;")),
                        k.k(q("μ", "&mu;")),
                        k.k(q("⊸", "&multimap;")),
                        k.k(q("⊸", "&mumap;")),
                        k.k(q("⋙̸", "&nGg;")),
                        k.k(q("≫⃒", "&nGt;")),
                        k.k(q("≫̸", "&nGtv;")),
                        k.k(q("⇍", "&nLeftarrow;")),
                        k.k(q("⇎", "&nLeftrightarrow;")),
                        k.k(q("⋘̸", "&nLl;")),
                        k.k(q("≪⃒", "&nLt;")),
                        k.k(q("≪̸", "&nLtv;")),
                        k.k(q("⇏", "&nRightarrow;")),
                        k.k(q("⊯", "&nVDash;")),
                        k.k(q("⊮", "&nVdash;")),
                        k.k(q("∇", "&nabla;")),
                        k.k(q("ń", "&nacute;")),
                        k.k(q("∠⃒", "&nang;")),
                        k.k(q("≉", "&nap;")),
                        k.k(q("⩰̸", "&napE;")),
                        k.k(q("≋̸", "&napid;")),
                        k.k(q("ŉ", "&napos;")),
                        k.k(q("≉", "&napprox;")),
                        k.k(q("♮", "&natur;")),
                        k.k(q("♮", "&natural;")),
                        k.k(q("ℕ", "&naturals;")),
                        k.k(q(" ", "&nbsp")),
                        k.k(q(" ", "&nbsp;")),
                        k.k(q("≎̸", "&nbump;")),
                        k.k(q("≏̸", "&nbumpe;")),
                        k.k(q("⩃", "&ncap;")),
                        k.k(q("ň", "&ncaron;")),
                        k.k(q("ņ", "&ncedil;")),
                        k.k(q("≇", "&ncong;")),
                        k.k(q("⩭̸", "&ncongdot;")),
                        k.k(q("⩂", "&ncup;")),
                        k.k(q("н", "&ncy;")),
                        k.k(q("–", "&ndash;")),
                        k.k(q("≠", "&ne;")),
                        k.k(q("⇗", "&neArr;")),
                        k.k(q("⤤", "&nearhk;")),
                        k.k(q("↗", "&nearr;")),
                        k.k(q("↗", "&nearrow;")),
                        k.k(q("≐̸", "&nedot;")),
                        k.k(q("≢", "&nequiv;")),
                        k.k(q("⤨", "&nesear;")),
                        k.k(q("≂̸", "&nesim;")),
                        k.k(q("∄", "&nexist;")),
                        k.k(q("∄", "&nexists;")),
                        k.k(q("𝔫", "&nfr;")),
                        k.k(q("≧̸", "&ngE;")),
                        k.k(q("≱", "&nge;")),
                        k.k(q("≱", "&ngeq;")),
                        k.k(q("≧̸", "&ngeqq;")),
                        k.k(q("⩾̸", "&ngeqslant;")),
                        k.k(q("⩾̸", "&nges;")),
                        k.k(q("≵", "&ngsim;")),
                        k.k(q("≯", "&ngt;")),
                        k.k(q("≯", "&ngtr;")),
                        k.k(q("⇎", "&nhArr;")),
                        k.k(q("↮", "&nharr;")),
                        k.k(q("⫲", "&nhpar;")),
                        k.k(q("∋", "&ni;")),
                        k.k(q("⋼", "&nis;")),
                        k.k(q("⋺", "&nisd;")),
                        k.k(q("∋", "&niv;")),
                        k.k(q("њ", "&njcy;")),
                        k.k(q("⇍", "&nlArr;")),
                        k.k(q("≦̸", "&nlE;")),
                        k.k(q("↚", "&nlarr;")),
                        k.k(q("‥", "&nldr;")),
                        k.k(q("≰", "&nle;")),
                        k.k(q("↚", "&nleftarrow;")),
                        k.k(q("↮", "&nleftrightarrow;")),
                        k.k(q("≰", "&nleq;")),
                        k.k(q("≦̸", "&nleqq;")),
                        k.k(q("⩽̸", "&nleqslant;")),
                        k.k(q("⩽̸", "&nles;")),
                        k.k(q("≮", "&nless;")),
                        k.k(q("≴", "&nlsim;")),
                        k.k(q("≮", "&nlt;")),
                        k.k(q("⋪", "&nltri;")),
                        k.k(q("⋬", "&nltrie;")),
                        k.k(q("∤", "&nmid;")),
                        k.k(q("𝕟", "&nopf;")),
                        k.k(q("¬", "&not")),
                        k.k(q("¬", "&not;")),
                        k.k(q("∉", "&notin;")),
                        k.k(q("⋹̸", "&notinE;")),
                        k.k(q("⋵̸", "&notindot;")),
                        k.k(q("∉", "&notinva;")),
                        k.k(q("⋷", "&notinvb;")),
                        k.k(q("⋶", "&notinvc;")),
                        k.k(q("∌", "&notni;")),
                        k.k(q("∌", "&notniva;")),
                        k.k(q("⋾", "&notnivb;")),
                        k.k(q("⋽", "&notnivc;")),
                        k.k(q("∦", "&npar;")),
                        k.k(q("∦", "&nparallel;")),
                        k.k(q("⫽⃥", "&nparsl;")),
                        k.k(q("∂̸", "&npart;")),
                        k.k(q("⨔", "&npolint;")),
                        k.k(q("⊀", "&npr;")),
                        k.k(q("⋠", "&nprcue;")),
                        k.k(q("⪯̸", "&npre;")),
                        k.k(q("⊀", "&nprec;")),
                        k.k(q("⪯̸", "&npreceq;")),
                        k.k(q("⇏", "&nrArr;")),
                        k.k(q("↛", "&nrarr;")),
                        k.k(q("⤳̸", "&nrarrc;")),
                        k.k(q("↝̸", "&nrarrw;")),
                        k.k(q("↛", "&nrightarrow;")),
                        k.k(q("⋫", "&nrtri;")),
                        k.k(q("⋭", "&nrtrie;")),
                        k.k(q("⊁", "&nsc;")),
                        k.k(q("⋡", "&nsccue;")),
                        k.k(q("⪰̸", "&nsce;")),
                        k.k(q("𝓃", "&nscr;")),
                        k.k(q("∤", "&nshortmid;")),
                        k.k(q("∦", "&nshortparallel;")),
                        k.k(q("≁", "&nsim;")),
                        k.k(q("≄", "&nsime;")),
                        k.k(q("≄", "&nsimeq;")),
                        k.k(q("∤", "&nsmid;")),
                        k.k(q("∦", "&nspar;")),
                        k.k(q("⋢", "&nsqsube;")),
                        k.k(q("⋣", "&nsqsupe;")),
                        k.k(q("⊄", "&nsub;")),
                        k.k(q("⫅̸", "&nsubE;")),
                        k.k(q("⊈", "&nsube;")),
                        k.k(q("⊂⃒", "&nsubset;")),
                        k.k(q("⊈", "&nsubseteq;")),
                        k.k(q("⫅̸", "&nsubseteqq;")),
                        k.k(q("⊁", "&nsucc;")),
                        k.k(q("⪰̸", "&nsucceq;")),
                        k.k(q("⊅", "&nsup;")),
                        k.k(q("⫆̸", "&nsupE;")),
                        k.k(q("⊉", "&nsupe;")),
                        k.k(q("⊃⃒", "&nsupset;")),
                        k.k(q("⊉", "&nsupseteq;")),
                        k.k(q("⫆̸", "&nsupseteqq;")),
                        k.k(q("≹", "&ntgl;")),
                        k.k(q("ñ", "&ntilde")),
                        k.k(q("ñ", "&ntilde;")),
                        k.k(q("≸", "&ntlg;")),
                        k.k(q("⋪", "&ntriangleleft;")),
                        k.k(q("⋬", "&ntrianglelefteq;")),
                        k.k(q("⋫", "&ntriangleright;")),
                        k.k(q("⋭", "&ntrianglerighteq;")),
                        k.k(q("ν", "&nu;")),
                        k.k(q("#", "&num;")),
                        k.k(q("№", "&numero;")),
                        k.k(q(" ", "&numsp;")),
                        k.k(q("⊭", "&nvDash;")),
                        k.k(q("⤄", "&nvHarr;")),
                        k.k(q("≍⃒", "&nvap;")),
                        k.k(q("⊬", "&nvdash;")),
                        k.k(q("≥⃒", "&nvge;"));
                    k.k(q(">⃒", "&nvgt;")),
                        k.k(q("⧞", "&nvinfin;")),
                        k.k(q("⤂", "&nvlArr;")),
                        k.k(q("≤⃒", "&nvle;")),
                        k.k(q("<⃒", "&nvlt;")),
                        k.k(q("⊴⃒", "&nvltrie;")),
                        k.k(q("⤃", "&nvrArr;")),
                        k.k(q("⊵⃒", "&nvrtrie;")),
                        k.k(q("∼⃒", "&nvsim;")),
                        k.k(q("⇖", "&nwArr;")),
                        k.k(q("⤣", "&nwarhk;")),
                        k.k(q("↖", "&nwarr;")),
                        k.k(q("↖", "&nwarrow;")),
                        k.k(q("⤧", "&nwnear;")),
                        k.k(q("Ⓢ", "&oS;")),
                        k.k(q("ó", "&oacute")),
                        k.k(q("ó", "&oacute;")),
                        k.k(q("⊛", "&oast;")),
                        k.k(q("⊚", "&ocir;")),
                        k.k(q("ô", "&ocirc")),
                        k.k(q("ô", "&ocirc;")),
                        k.k(q("о", "&ocy;")),
                        k.k(q("⊝", "&odash;")),
                        k.k(q("ő", "&odblac;")),
                        k.k(q("⨸", "&odiv;")),
                        k.k(q("⊙", "&odot;")),
                        k.k(q("⦼", "&odsold;")),
                        k.k(q("œ", "&oelig;")),
                        k.k(q("⦿", "&ofcir;")),
                        k.k(q("𝔬", "&ofr;")),
                        k.k(q("˛", "&ogon;")),
                        k.k(q("ò", "&ograve")),
                        k.k(q("ò", "&ograve;")),
                        k.k(q("⧁", "&ogt;")),
                        k.k(q("⦵", "&ohbar;")),
                        k.k(q("Ω", "&ohm;")),
                        k.k(q("∮", "&oint;")),
                        k.k(q("↺", "&olarr;")),
                        k.k(q("⦾", "&olcir;")),
                        k.k(q("⦻", "&olcross;")),
                        k.k(q("‾", "&oline;")),
                        k.k(q("⧀", "&olt;")),
                        k.k(q("ō", "&omacr;")),
                        k.k(q("ω", "&omega;")),
                        k.k(q("ο", "&omicron;")),
                        k.k(q("⦶", "&omid;")),
                        k.k(q("⊖", "&ominus;")),
                        k.k(q("𝕠", "&oopf;")),
                        k.k(q("⦷", "&opar;")),
                        k.k(q("⦹", "&operp;")),
                        k.k(q("⊕", "&oplus;")),
                        k.k(q("∨", "&or;")),
                        k.k(q("↻", "&orarr;")),
                        k.k(q("⩝", "&ord;")),
                        k.k(q("ℴ", "&order;")),
                        k.k(q("ℴ", "&orderof;")),
                        k.k(q("ª", "&ordf")),
                        k.k(q("ª", "&ordf;")),
                        k.k(q("º", "&ordm")),
                        k.k(q("º", "&ordm;")),
                        k.k(q("⊶", "&origof;")),
                        k.k(q("⩖", "&oror;")),
                        k.k(q("⩗", "&orslope;")),
                        k.k(q("⩛", "&orv;")),
                        k.k(q("ℴ", "&oscr;")),
                        k.k(q("ø", "&oslash")),
                        k.k(q("ø", "&oslash;")),
                        k.k(q("⊘", "&osol;")),
                        k.k(q("õ", "&otilde")),
                        k.k(q("õ", "&otilde;")),
                        k.k(q("⊗", "&otimes;")),
                        k.k(q("⨶", "&otimesas;")),
                        k.k(q("ö", "&ouml")),
                        k.k(q("ö", "&ouml;")),
                        k.k(q("⌽", "&ovbar;")),
                        k.k(q("∥", "&par;")),
                        k.k(q("¶", "&para")),
                        k.k(q("¶", "&para;")),
                        k.k(q("∥", "&parallel;")),
                        k.k(q("⫳", "&parsim;")),
                        k.k(q("⫽", "&parsl;")),
                        k.k(q("∂", "&part;")),
                        k.k(q("п", "&pcy;")),
                        k.k(q("%", "&percnt;")),
                        k.k(q(".", "&period;")),
                        k.k(q("‰", "&permil;")),
                        k.k(q("⊥", "&perp;")),
                        k.k(q("‱", "&pertenk;")),
                        k.k(q("𝔭", "&pfr;")),
                        k.k(q("φ", "&phi;")),
                        k.k(q("ϕ", "&phiv;")),
                        k.k(q("ℳ", "&phmmat;")),
                        k.k(q("☎", "&phone;")),
                        k.k(q("π", "&pi;")),
                        k.k(q("⋔", "&pitchfork;")),
                        k.k(q("ϖ", "&piv;")),
                        k.k(q("ℏ", "&planck;")),
                        k.k(q("ℎ", "&planckh;")),
                        k.k(q("ℏ", "&plankv;")),
                        k.k(q("+", "&plus;")),
                        k.k(q("⨣", "&plusacir;")),
                        k.k(q("⊞", "&plusb;")),
                        k.k(q("⨢", "&pluscir;")),
                        k.k(q("∔", "&plusdo;")),
                        k.k(q("⨥", "&plusdu;")),
                        k.k(q("⩲", "&pluse;")),
                        k.k(q("±", "&plusmn")),
                        k.k(q("±", "&plusmn;")),
                        k.k(q("⨦", "&plussim;")),
                        k.k(q("⨧", "&plustwo;")),
                        k.k(q("±", "&pm;")),
                        k.k(q("⨕", "&pointint;")),
                        k.k(q("𝕡", "&popf;")),
                        k.k(q("£", "&pound")),
                        k.k(q("£", "&pound;")),
                        k.k(q("≺", "&pr;")),
                        k.k(q("⪳", "&prE;")),
                        k.k(q("⪷", "&prap;")),
                        k.k(q("≼", "&prcue;")),
                        k.k(q("⪯", "&pre;")),
                        k.k(q("≺", "&prec;")),
                        k.k(q("⪷", "&precapprox;")),
                        k.k(q("≼", "&preccurlyeq;")),
                        k.k(q("⪯", "&preceq;")),
                        k.k(q("⪹", "&precnapprox;")),
                        k.k(q("⪵", "&precneqq;")),
                        k.k(q("⋨", "&precnsim;")),
                        k.k(q("≾", "&precsim;")),
                        k.k(q("′", "&prime;")),
                        k.k(q("ℙ", "&primes;")),
                        k.k(q("⪵", "&prnE;")),
                        k.k(q("⪹", "&prnap;")),
                        k.k(q("⋨", "&prnsim;")),
                        k.k(q("∏", "&prod;")),
                        k.k(q("⌮", "&profalar;")),
                        k.k(q("⌒", "&profline;")),
                        k.k(q("⌓", "&profsurf;")),
                        k.k(q("∝", "&prop;")),
                        k.k(q("∝", "&propto;")),
                        k.k(q("≾", "&prsim;")),
                        k.k(q("⊰", "&prurel;")),
                        k.k(q("𝓅", "&pscr;")),
                        k.k(q("ψ", "&psi;")),
                        k.k(q(" ", "&puncsp;")),
                        k.k(q("𝔮", "&qfr;")),
                        k.k(q("⨌", "&qint;")),
                        k.k(q("𝕢", "&qopf;")),
                        k.k(q("⁗", "&qprime;")),
                        k.k(q("𝓆", "&qscr;")),
                        k.k(q("ℍ", "&quaternions;")),
                        k.k(q("⨖", "&quatint;")),
                        k.k(q("?", "&quest;")),
                        k.k(q("≟", "&questeq;")),
                        k.k(q('"', "&quot")),
                        k.k(q('"', "&quot;")),
                        k.k(q("⇛", "&rAarr;")),
                        k.k(q("⇒", "&rArr;")),
                        k.k(q("⤜", "&rAtail;")),
                        k.k(q("⤏", "&rBarr;")),
                        k.k(q("⥤", "&rHar;")),
                        k.k(q("∽̱", "&race;")),
                        k.k(q("ŕ", "&racute;")),
                        k.k(q("√", "&radic;")),
                        k.k(q("⦳", "&raemptyv;")),
                        k.k(q("⟩", "&rang;")),
                        k.k(q("⦒", "&rangd;")),
                        k.k(q("⦥", "&range;")),
                        k.k(q("⟩", "&rangle;")),
                        k.k(q("»", "&raquo")),
                        k.k(q("»", "&raquo;")),
                        k.k(q("→", "&rarr;")),
                        k.k(q("⥵", "&rarrap;")),
                        k.k(q("⇥", "&rarrb;")),
                        k.k(q("⤠", "&rarrbfs;")),
                        k.k(q("⤳", "&rarrc;")),
                        k.k(q("⤞", "&rarrfs;")),
                        k.k(q("↪", "&rarrhk;")),
                        k.k(q("↬", "&rarrlp;")),
                        k.k(q("⥅", "&rarrpl;")),
                        k.k(q("⥴", "&rarrsim;")),
                        k.k(q("↣", "&rarrtl;")),
                        k.k(q("↝", "&rarrw;")),
                        k.k(q("⤚", "&ratail;")),
                        k.k(q("∶", "&ratio;")),
                        k.k(q("ℚ", "&rationals;")),
                        k.k(q("⤍", "&rbarr;")),
                        k.k(q("❳", "&rbbrk;")),
                        k.k(q("}", "&rbrace;")),
                        k.k(q("]", "&rbrack;")),
                        k.k(q("⦌", "&rbrke;")),
                        k.k(q("⦎", "&rbrksld;")),
                        k.k(q("⦐", "&rbrkslu;")),
                        k.k(q("ř", "&rcaron;")),
                        k.k(q("ŗ", "&rcedil;")),
                        k.k(q("⌉", "&rceil;")),
                        k.k(q("}", "&rcub;")),
                        k.k(q("р", "&rcy;")),
                        k.k(q("⤷", "&rdca;")),
                        k.k(q("⥩", "&rdldhar;")),
                        k.k(q("”", "&rdquo;")),
                        k.k(q("”", "&rdquor;")),
                        k.k(q("↳", "&rdsh;")),
                        k.k(q("ℜ", "&real;")),
                        k.k(q("ℛ", "&realine;")),
                        k.k(q("ℜ", "&realpart;")),
                        k.k(q("ℝ", "&reals;")),
                        k.k(q("▭", "&rect;")),
                        k.k(q("®", "&reg")),
                        k.k(q("®", "&reg;")),
                        k.k(q("⥽", "&rfisht;")),
                        k.k(q("⌋", "&rfloor;")),
                        k.k(q("𝔯", "&rfr;")),
                        k.k(q("⇁", "&rhard;")),
                        k.k(q("⇀", "&rharu;")),
                        k.k(q("⥬", "&rharul;")),
                        k.k(q("ρ", "&rho;")),
                        k.k(q("ϱ", "&rhov;")),
                        k.k(q("→", "&rightarrow;")),
                        k.k(q("↣", "&rightarrowtail;")),
                        k.k(q("⇁", "&rightharpoondown;")),
                        k.k(q("⇀", "&rightharpoonup;")),
                        k.k(q("⇄", "&rightleftarrows;")),
                        k.k(q("⇌", "&rightleftharpoons;")),
                        k.k(q("⇉", "&rightrightarrows;")),
                        k.k(q("↝", "&rightsquigarrow;")),
                        k.k(q("⋌", "&rightthreetimes;")),
                        k.k(q("˚", "&ring;")),
                        k.k(q("≓", "&risingdotseq;")),
                        k.k(q("⇄", "&rlarr;")),
                        k.k(q("⇌", "&rlhar;")),
                        k.k(q("‏", "&rlm;")),
                        k.k(q("⎱", "&rmoust;")),
                        k.k(q("⎱", "&rmoustache;")),
                        k.k(q("⫮", "&rnmid;")),
                        k.k(q("⟭", "&roang;")),
                        k.k(q("⇾", "&roarr;")),
                        k.k(q("⟧", "&robrk;")),
                        k.k(q("⦆", "&ropar;")),
                        k.k(q("𝕣", "&ropf;")),
                        k.k(q("⨮", "&roplus;")),
                        k.k(q("⨵", "&rotimes;")),
                        k.k(q(")", "&rpar;")),
                        k.k(q("⦔", "&rpargt;")),
                        k.k(q("⨒", "&rppolint;")),
                        k.k(q("⇉", "&rrarr;")),
                        k.k(q("›", "&rsaquo;")),
                        k.k(q("𝓇", "&rscr;")),
                        k.k(q("↱", "&rsh;")),
                        k.k(q("]", "&rsqb;")),
                        k.k(q("’", "&rsquo;")),
                        k.k(q("’", "&rsquor;")),
                        k.k(q("⋌", "&rthree;")),
                        k.k(q("⋊", "&rtimes;")),
                        k.k(q("▹", "&rtri;")),
                        k.k(q("⊵", "&rtrie;")),
                        k.k(q("▸", "&rtrif;")),
                        k.k(q("⧎", "&rtriltri;")),
                        k.k(q("⥨", "&ruluhar;")),
                        k.k(q("℞", "&rx;")),
                        k.k(q("ś", "&sacute;")),
                        k.k(q("‚", "&sbquo;")),
                        k.k(q("≻", "&sc;")),
                        k.k(q("⪴", "&scE;")),
                        k.k(q("⪸", "&scap;")),
                        k.k(q("š", "&scaron;")),
                        k.k(q("≽", "&sccue;")),
                        k.k(q("⪰", "&sce;")),
                        k.k(q("ş", "&scedil;")),
                        k.k(q("ŝ", "&scirc;")),
                        k.k(q("⪶", "&scnE;")),
                        k.k(q("⪺", "&scnap;")),
                        k.k(q("⋩", "&scnsim;")),
                        k.k(q("⨓", "&scpolint;")),
                        k.k(q("≿", "&scsim;")),
                        k.k(q("с", "&scy;")),
                        k.k(q("⋅", "&sdot;")),
                        k.k(q("⊡", "&sdotb;")),
                        k.k(q("⩦", "&sdote;")),
                        k.k(q("⇘", "&seArr;")),
                        k.k(q("⤥", "&searhk;")),
                        k.k(q("↘", "&searr;")),
                        k.k(q("↘", "&searrow;")),
                        k.k(q("§", "&sect")),
                        k.k(q("§", "&sect;")),
                        k.k(q(";", "&semi;")),
                        k.k(q("⤩", "&seswar;")),
                        k.k(q("∖", "&setminus;")),
                        k.k(q("∖", "&setmn;")),
                        k.k(q("✶", "&sext;")),
                        k.k(q("𝔰", "&sfr;")),
                        k.k(q("⌢", "&sfrown;")),
                        k.k(q("♯", "&sharp;")),
                        k.k(q("щ", "&shchcy;")),
                        k.k(q("ш", "&shcy;")),
                        k.k(q("∣", "&shortmid;")),
                        k.k(q("∥", "&shortparallel;")),
                        k.k(q("­", "&shy")),
                        k.k(q("­", "&shy;")),
                        k.k(q("σ", "&sigma;")),
                        k.k(q("ς", "&sigmaf;")),
                        k.k(q("ς", "&sigmav;")),
                        k.k(q("∼", "&sim;")),
                        k.k(q("⩪", "&simdot;")),
                        k.k(q("≃", "&sime;")),
                        k.k(q("≃", "&simeq;")),
                        k.k(q("⪞", "&simg;")),
                        k.k(q("⪠", "&simgE;")),
                        k.k(q("⪝", "&siml;")),
                        k.k(q("⪟", "&simlE;")),
                        k.k(q("≆", "&simne;")),
                        k.k(q("⨤", "&simplus;")),
                        k.k(q("⥲", "&simrarr;")),
                        k.k(q("←", "&slarr;")),
                        k.k(q("∖", "&smallsetminus;")),
                        k.k(q("⨳", "&smashp;")),
                        k.k(q("⧤", "&smeparsl;")),
                        k.k(q("∣", "&smid;")),
                        k.k(q("⌣", "&smile;")),
                        k.k(q("⪪", "&smt;")),
                        k.k(q("⪬", "&smte;")),
                        k.k(q("⪬︀", "&smtes;")),
                        k.k(q("ь", "&softcy;")),
                        k.k(q("/", "&sol;")),
                        k.k(q("⧄", "&solb;")),
                        k.k(q("⌿", "&solbar;")),
                        k.k(q("𝕤", "&sopf;")),
                        k.k(q("♠", "&spades;")),
                        k.k(q("♠", "&spadesuit;")),
                        k.k(q("∥", "&spar;")),
                        k.k(q("⊓", "&sqcap;")),
                        k.k(q("⊓︀", "&sqcaps;")),
                        k.k(q("⊔", "&sqcup;")),
                        k.k(q("⊔︀", "&sqcups;")),
                        k.k(q("⊏", "&sqsub;")),
                        k.k(q("⊑", "&sqsube;")),
                        k.k(q("⊏", "&sqsubset;")),
                        k.k(q("⊑", "&sqsubseteq;")),
                        k.k(q("⊐", "&sqsup;")),
                        k.k(q("⊒", "&sqsupe;")),
                        k.k(q("⊐", "&sqsupset;")),
                        k.k(q("⊒", "&sqsupseteq;")),
                        k.k(q("□", "&squ;")),
                        k.k(q("□", "&square;")),
                        k.k(q("▪", "&squarf;")),
                        k.k(q("▪", "&squf;")),
                        k.k(q("→", "&srarr;")),
                        k.k(q("𝓈", "&sscr;")),
                        k.k(q("∖", "&ssetmn;")),
                        k.k(q("⌣", "&ssmile;")),
                        k.k(q("⋆", "&sstarf;")),
                        k.k(q("☆", "&star;")),
                        k.k(q("★", "&starf;")),
                        k.k(q("ϵ", "&straightepsilon;")),
                        k.k(q("ϕ", "&straightphi;")),
                        k.k(q("¯", "&strns;")),
                        k.k(q("⊂", "&sub;")),
                        k.k(q("⫅", "&subE;")),
                        k.k(q("⪽", "&subdot;")),
                        k.k(q("⊆", "&sube;")),
                        k.k(q("⫃", "&subedot;")),
                        k.k(q("⫁", "&submult;")),
                        k.k(q("⫋", "&subnE;")),
                        k.k(q("⊊", "&subne;")),
                        k.k(q("⪿", "&subplus;")),
                        k.k(q("⥹", "&subrarr;")),
                        k.k(q("⊂", "&subset;")),
                        k.k(q("⊆", "&subseteq;")),
                        k.k(q("⫅", "&subseteqq;")),
                        k.k(q("⊊", "&subsetneq;")),
                        k.k(q("⫋", "&subsetneqq;")),
                        k.k(q("⫇", "&subsim;")),
                        k.k(q("⫕", "&subsub;")),
                        k.k(q("⫓", "&subsup;")),
                        k.k(q("≻", "&succ;")),
                        k.k(q("⪸", "&succapprox;")),
                        k.k(q("≽", "&succcurlyeq;")),
                        k.k(q("⪰", "&succeq;")),
                        k.k(q("⪺", "&succnapprox;")),
                        k.k(q("⪶", "&succneqq;")),
                        k.k(q("⋩", "&succnsim;")),
                        k.k(q("≿", "&succsim;")),
                        k.k(q("∑", "&sum;")),
                        k.k(q("♪", "&sung;")),
                        k.k(q("¹", "&sup1")),
                        k.k(q("¹", "&sup1;")),
                        k.k(q("²", "&sup2")),
                        k.k(q("²", "&sup2;")),
                        k.k(q("³", "&sup3")),
                        k.k(q("³", "&sup3;")),
                        k.k(q("⊃", "&sup;")),
                        k.k(q("⫆", "&supE;")),
                        k.k(q("⪾", "&supdot;")),
                        k.k(q("⫘", "&supdsub;")),
                        k.k(q("⊇", "&supe;")),
                        k.k(q("⫄", "&supedot;")),
                        k.k(q("⟉", "&suphsol;")),
                        k.k(q("⫗", "&suphsub;")),
                        k.k(q("⥻", "&suplarr;")),
                        k.k(q("⫂", "&supmult;")),
                        k.k(q("⫌", "&supnE;")),
                        k.k(q("⊋", "&supne;")),
                        k.k(q("⫀", "&supplus;")),
                        k.k(q("⊃", "&supset;")),
                        k.k(q("⊇", "&supseteq;")),
                        k.k(q("⫆", "&supseteqq;")),
                        k.k(q("⊋", "&supsetneq;")),
                        k.k(q("⫌", "&supsetneqq;")),
                        k.k(q("⫈", "&supsim;")),
                        k.k(q("⫔", "&supsub;")),
                        k.k(q("⫖", "&supsup;")),
                        k.k(q("⇙", "&swArr;")),
                        k.k(q("⤦", "&swarhk;")),
                        k.k(q("↙", "&swarr;")),
                        k.k(q("↙", "&swarrow;")),
                        k.k(q("⤪", "&swnwar;")),
                        k.k(q("ß", "&szlig")),
                        k.k(q("ß", "&szlig;")),
                        k.k(q("⌖", "&target;")),
                        k.k(q("τ", "&tau;")),
                        k.k(q("⎴", "&tbrk;")),
                        k.k(q("ť", "&tcaron;")),
                        k.k(q("ţ", "&tcedil;")),
                        k.k(q("т", "&tcy;")),
                        k.k(q("⃛", "&tdot;")),
                        k.k(q("⌕", "&telrec;")),
                        k.k(q("𝔱", "&tfr;")),
                        k.k(q("∴", "&there4;")),
                        k.k(q("∴", "&therefore;")),
                        k.k(q("θ", "&theta;")),
                        k.k(q("ϑ", "&thetasym;")),
                        k.k(q("ϑ", "&thetav;")),
                        k.k(q("≈", "&thickapprox;")),
                        k.k(q("∼", "&thicksim;")),
                        k.k(q(" ", "&thinsp;")),
                        k.k(q("≈", "&thkap;")),
                        k.k(q("∼", "&thksim;")),
                        k.k(q("þ", "&thorn")),
                        k.k(q("þ", "&thorn;")),
                        k.k(q("˜", "&tilde;")),
                        k.k(q("×", "&times")),
                        k.k(q("×", "&times;")),
                        k.k(q("⊠", "&timesb;")),
                        k.k(q("⨱", "&timesbar;")),
                        k.k(q("⨰", "&timesd;")),
                        k.k(q("∭", "&tint;")),
                        k.k(q("⤨", "&toea;")),
                        k.k(q("⊤", "&top;")),
                        k.k(q("⌶", "&topbot;")),
                        k.k(q("⫱", "&topcir;")),
                        k.k(q("𝕥", "&topf;")),
                        k.k(q("⫚", "&topfork;")),
                        k.k(q("⤩", "&tosa;")),
                        k.k(q("‴", "&tprime;")),
                        k.k(q("™", "&trade;")),
                        k.k(q("▵", "&triangle;")),
                        k.k(q("▿", "&triangledown;")),
                        k.k(q("◃", "&triangleleft;")),
                        k.k(q("⊴", "&trianglelefteq;")),
                        k.k(q("≜", "&triangleq;")),
                        k.k(q("▹", "&triangleright;")),
                        k.k(q("⊵", "&trianglerighteq;")),
                        k.k(q("◬", "&tridot;")),
                        k.k(q("≜", "&trie;")),
                        k.k(q("⨺", "&triminus;")),
                        k.k(q("⨹", "&triplus;")),
                        k.k(q("⧍", "&trisb;")),
                        k.k(q("⨻", "&tritime;")),
                        k.k(q("⏢", "&trpezium;")),
                        k.k(q("𝓉", "&tscr;")),
                        k.k(q("ц", "&tscy;")),
                        k.k(q("ћ", "&tshcy;")),
                        k.k(q("ŧ", "&tstrok;")),
                        k.k(q("≬", "&twixt;")),
                        k.k(q("↞", "&twoheadleftarrow;")),
                        k.k(q("↠", "&twoheadrightarrow;")),
                        k.k(q("⇑", "&uArr;")),
                        k.k(q("⥣", "&uHar;")),
                        k.k(q("ú", "&uacute")),
                        k.k(q("ú", "&uacute;")),
                        k.k(q("↑", "&uarr;")),
                        k.k(q("ў", "&ubrcy;")),
                        k.k(q("ŭ", "&ubreve;")),
                        k.k(q("û", "&ucirc")),
                        k.k(q("û", "&ucirc;")),
                        k.k(q("у", "&ucy;")),
                        k.k(q("⇅", "&udarr;")),
                        k.k(q("ű", "&udblac;")),
                        k.k(q("⥮", "&udhar;")),
                        k.k(q("⥾", "&ufisht;")),
                        k.k(q("𝔲", "&ufr;")),
                        k.k(q("ù", "&ugrave")),
                        k.k(q("ù", "&ugrave;")),
                        k.k(q("↿", "&uharl;")),
                        k.k(q("↾", "&uharr;")),
                        k.k(q("▀", "&uhblk;")),
                        k.k(q("⌜", "&ulcorn;")),
                        k.k(q("⌜", "&ulcorner;")),
                        k.k(q("⌏", "&ulcrop;")),
                        k.k(q("◸", "&ultri;")),
                        k.k(q("ū", "&umacr;")),
                        k.k(q("¨", "&uml")),
                        k.k(q("¨", "&uml;")),
                        k.k(q("ų", "&uogon;")),
                        k.k(q("𝕦", "&uopf;")),
                        k.k(q("↑", "&uparrow;")),
                        k.k(q("↕", "&updownarrow;")),
                        k.k(q("↿", "&upharpoonleft;")),
                        k.k(q("↾", "&upharpoonright;")),
                        k.k(q("⊎", "&uplus;")),
                        k.k(q("υ", "&upsi;")),
                        k.k(q("ϒ", "&upsih;")),
                        k.k(q("υ", "&upsilon;")),
                        k.k(q("⇈", "&upuparrows;")),
                        k.k(q("⌝", "&urcorn;")),
                        k.k(q("⌝", "&urcorner;")),
                        k.k(q("⌎", "&urcrop;")),
                        k.k(q("ů", "&uring;")),
                        k.k(q("◹", "&urtri;")),
                        k.k(q("𝓊", "&uscr;")),
                        k.k(q("⋰", "&utdot;")),
                        k.k(q("ũ", "&utilde;")),
                        k.k(q("▵", "&utri;")),
                        k.k(q("▴", "&utrif;")),
                        k.k(q("⇈", "&uuarr;")),
                        k.k(q("ü", "&uuml")),
                        k.k(q("ü", "&uuml;")),
                        k.k(q("⦧", "&uwangle;")),
                        k.k(q("⇕", "&vArr;")),
                        k.k(q("⫨", "&vBar;")),
                        k.k(q("⫩", "&vBarv;")),
                        k.k(q("⊨", "&vDash;")),
                        k.k(q("⦜", "&vangrt;")),
                        k.k(q("ϵ", "&varepsilon;")),
                        k.k(q("ϰ", "&varkappa;")),
                        k.k(q("∅", "&varnothing;")),
                        k.k(q("ϕ", "&varphi;")),
                        k.k(q("ϖ", "&varpi;")),
                        k.k(q("∝", "&varpropto;")),
                        k.k(q("↕", "&varr;")),
                        k.k(q("ϱ", "&varrho;")),
                        k.k(q("ς", "&varsigma;")),
                        k.k(q("⊊︀", "&varsubsetneq;")),
                        k.k(q("⫋︀", "&varsubsetneqq;")),
                        k.k(q("⊋︀", "&varsupsetneq;")),
                        k.k(q("⫌︀", "&varsupsetneqq;")),
                        k.k(q("ϑ", "&vartheta;")),
                        k.k(q("⊲", "&vartriangleleft;")),
                        k.k(q("⊳", "&vartriangleright;")),
                        k.k(q("в", "&vcy;")),
                        k.k(q("⊢", "&vdash;")),
                        k.k(q("∨", "&vee;")),
                        k.k(q("⊻", "&veebar;")),
                        k.k(q("≚", "&veeeq;")),
                        k.k(q("⋮", "&vellip;")),
                        k.k(q("|", "&verbar;")),
                        k.k(q("|", "&vert;")),
                        k.k(q("𝔳", "&vfr;")),
                        k.k(q("⊲", "&vltri;")),
                        k.k(q("⊂⃒", "&vnsub;")),
                        k.k(q("⊃⃒", "&vnsup;")),
                        k.k(q("𝕧", "&vopf;")),
                        k.k(q("∝", "&vprop;")),
                        k.k(q("⊳", "&vrtri;")),
                        k.k(q("𝓋", "&vscr;")),
                        k.k(q("⫋︀", "&vsubnE;")),
                        k.k(q("⊊︀", "&vsubne;")),
                        k.k(q("⫌︀", "&vsupnE;")),
                        k.k(q("⊋︀", "&vsupne;")),
                        k.k(q("⦚", "&vzigzag;")),
                        k.k(q("ŵ", "&wcirc;")),
                        k.k(q("⩟", "&wedbar;")),
                        k.k(q("∧", "&wedge;")),
                        k.k(q("≙", "&wedgeq;")),
                        k.k(q("℘", "&weierp;")),
                        k.k(q("𝔴", "&wfr;")),
                        k.k(q("𝕨", "&wopf;")),
                        k.k(q("℘", "&wp;")),
                        k.k(q("≀", "&wr;")),
                        k.k(q("≀", "&wreath;")),
                        k.k(q("𝓌", "&wscr;")),
                        k.k(q("⋂", "&xcap;")),
                        k.k(q("◯", "&xcirc;")),
                        k.k(q("⋃", "&xcup;")),
                        k.k(q("▽", "&xdtri;")),
                        k.k(q("𝔵", "&xfr;")),
                        k.k(q("⟺", "&xhArr;")),
                        k.k(q("⟷", "&xharr;")),
                        k.k(q("ξ", "&xi;")),
                        k.k(q("⟸", "&xlArr;")),
                        k.k(q("⟵", "&xlarr;")),
                        k.k(q("⟼", "&xmap;")),
                        k.k(q("⋻", "&xnis;")),
                        k.k(q("⨀", "&xodot;")),
                        k.k(q("𝕩", "&xopf;")),
                        k.k(q("⨁", "&xoplus;")),
                        k.k(q("⨂", "&xotime;")),
                        k.k(q("⟹", "&xrArr;")),
                        k.k(q("⟶", "&xrarr;")),
                        k.k(q("𝓍", "&xscr;")),
                        k.k(q("⨆", "&xsqcup;")),
                        k.k(q("⨄", "&xuplus;")),
                        k.k(q("△", "&xutri;")),
                        k.k(q("⋁", "&xvee;")),
                        k.k(q("⋀", "&xwedge;")),
                        k.k(q("ý", "&yacute")),
                        k.k(q("ý", "&yacute;")),
                        k.k(q("я", "&yacy;")),
                        k.k(q("ŷ", "&ycirc;")),
                        k.k(q("ы", "&ycy;")),
                        k.k(q("¥", "&yen")),
                        k.k(q("¥", "&yen;")),
                        k.k(q("𝔶", "&yfr;")),
                        k.k(q("ї", "&yicy;")),
                        k.k(q("𝕪", "&yopf;")),
                        k.k(q("𝓎", "&yscr;")),
                        k.k(q("ю", "&yucy;")),
                        k.k(q("ÿ", "&yuml")),
                        k.k(q("ÿ", "&yuml;")),
                        k.k(q("ź", "&zacute;")),
                        k.k(q("ž", "&zcaron;")),
                        k.k(q("з", "&zcy;")),
                        k.k(q("ż", "&zdot;")),
                        k.k(q("ℨ", "&zeetrf;")),
                        k.k(q("ζ", "&zeta;")),
                        k.k(q("𝔷", "&zfr;")),
                        k.k(q("ж", "&zhcy;")),
                        k.k(q("⇝", "&zigrarr;")),
                        k.k(q("𝕫", "&zopf;")),
                        k.k(q("𝓏", "&zscr;")),
                        k.k(q("‍", "&zwj;")),
                        k.k(q("‌", "&zwnj;")),
                        (this.hdc_1 = w(k)),
                        (this.idc_1 = X(0, this.hdc_1));
                }
                function rk() {
                    return null == e && new kk(), e;
                }
                function ek() {
                    a = this;
                    var k = v([q("\0", ""), q("\v", "&#11;"), q("\f", "&#12;"), q("￾", ""), q("￿", "")]);
                    (this.kdc_1 = Q([new ak(rk().ddc_1), new ak(k), l.jdc(1, 8), l.jdc(14, 31), l.jdc(127, 132), l.jdc(134, 159), new mk()])), (this.ldc_1 = Q([new ak(rk().fdc_1)])), (this.mdc_1 = Q([new ak(rk().hdc_1), l.jdc(1, 8), l.jdc(14, 31), l.jdc(127, 132), l.jdc(134, 159)])), (this.ndc_1 = Q([new ak(rk().gdc_1), new pk([])])), (this.odc_1 = Q([new ak(rk().idc_1), new pk([])])), (this.pdc_1 = Q([new ak(rk().edc_1), new pk([])]));
                }
                function ak(k) {
                    tk.call(this);
                    this.sdc_1 = E();
                    this.tdc_1 = A();
                    for (var r = 2147483647, e = 0, a = k.p(); a.q(); ) {
                        var t = a.r(),
                            o = t.ph(),
                            i = t.qh();
                        this.sdc_1.u2(o, i);
                        var c = D(o, 0),
                            l = L(c),
                            s = S(x(l));
                        this.tdc_1.k(new _(s));
                        var n = o.length;
                        n < r && (r = n), n > e && (e = n);
                    }
                    (this.udc_1 = r), (this.vdc_1 = e);
                }
                function tk() {}
                function ok() {
                    tk.call(this);
                }
                function ik() {
                    if (i) return p;
                    (i = !0), (t = new ck("SemiColonRequired", 0)), new ck("SemiColonOptional", 1), (o = new ck("ErrorIfNoSemiColon", 2));
                }
                function ck(k, r) {
                    O.call(this, k, r);
                }
                function lk(k, r) {
                    return k.xdc_1.w(r);
                }
                function sk() {
                    (c = this), (this.ydc_1 = B(uk()));
                }
                function nk() {
                    return null == c && new sk(), c;
                }
                function uk() {
                    return ik(), t;
                }
                function pk(k) {
                    nk(), tk.call(this);
                    var r;
                    (r = 0 === k.length ? nk().ydc_1 : G(k.slice())), (this.xdc_1 = r);
                }
                function dk() {}
                function gk(k, r) {
                    ok.call(this), (this.cdd_1 = k), (this.ddd_1 = r);
                }
                function mk() {
                    ok.call(this);
                }
                function hk(k, r, e, a) {
                    (e[(a + 1) | 0] = (function (k, r) {
                        var e = 1023 & r,
                            a = H(56320),
                            t = L(a);
                        return F((e + t) | 0);
                    })(0, r)),
                        (e[a] = (function (k, r) {
                            return F((55232 + ((r >>> 10) | 0)) | 0);
                        })(0, r));
                }
                function fk() {
                    (this.zdc_1 = 65536), (this.add_1 = 1114111);
                }
                h(tk, "StringTranslator"),
                    h(W, "AggregateTranslator", W, tk),
                    y(kk, "EntityMaps"),
                    y(ek, "KsoupEntities"),
                    h(ak, "LookupTranslator", R, tk),
                    h(ok, "CodePointTranslator", R, tk),
                    h(ck, "Option", R, O),
                    I(sk),
                    h(pk, "NumericEntityDecoder", R, tk),
                    I(dk),
                    h(
                        gk,
                        "NumericEntityEncoder",
                        function () {
                            return (k = g(d(gk))), gk.call(k, M(0, 2147483647), !0), k;
                            var k;
                        },
                        ok,
                    ),
                    h(mk, "UnicodeUnpairedSurrogateRemover", mk, ok),
                    y(fk, "CharsUtils"),
                    (d(W).bdc = function (k, r, e) {
                        for (var a = this.adc_1.p(); a.q(); ) {
                            var t = a.r().bdc(k, r, e);
                            if (0 !== t) return t;
                        }
                        return 0;
                    }),
                    (d(ek).qdc = function (k) {
                        return this.odc_1.cdc(k);
                    }),
                    (d(ek).rdc = function (k) {
                        return this.qdc(k);
                    }),
                    (d(ak).bdc = function (k, r, e) {
                        var a = D(k, r),
                            t = L(a),
                            o = S(x(t));
                        if (this.tdc_1.w(new _(o))) {
                            var i = this.vdc_1;
                            ((r + this.vdc_1) | 0) > k.length && (i = (k.length - r) | 0);
                            var c = i,
                                l = this.udc_1;
                            if (l <= c)
                                do {
                                    var s = c;
                                    c = (c + -1) | 0;
                                    var n = T(k, r, (r + s) | 0),
                                        u = this.sdc_1.r2($(n));
                                    if (null != u) return e.f9(u), N(n);
                                } while (s !== l);
                        }
                        return 0;
                    }),
                    (d(tk).cdc = function (k) {
                        var r = V(n(k.length, 2));
                        return (
                            (function (k, r, e) {
                                for (var a = 0, t = r.length; a < t; ) {
                                    var o = k.bdc(r, a, e);
                                    if (0 !== o) {
                                        var i = 0;
                                        if (i < o)
                                            do {
                                                (i = (i + 1) | 0), (a = (a + 1) | 0);
                                            } while (i < o);
                                    } else {
                                        var c = D(r, a);
                                        if ((e.g9(c), (a = (a + 1) | 0), C(c) && a < t)) {
                                            var l = D(r, a);
                                            U(l) && (e.g9(l), (a = (a + 1) | 0));
                                        }
                                    }
                                }
                            })(this, k, r),
                            r.toString()
                        );
                    }),
                    (d(ok).bdc = function (k, r, e) {
                        var a = D(k, r),
                            t = L(a);
                        return this.wdc(t, e) ? 1 : 0;
                    }),
                    (d(pk).bdc = function (k, r, e) {
                        var a = k.length;
                        if (D(k, r) === H(38) && r < ((a - 2) | 0) && D(k, (r + 1) | 0) === H(35)) {
                            var t = (r + 2) | 0,
                                i = !1,
                                c = D(k, t);
                            if ((c === H(120) || c === H(88)) && ((i = !0), (t = (t + 1) | 0) === a)) return 0;
                            var l = t;
                            k: for (;;) {
                                var n;
                                if (l < a) {
                                    var u,
                                        p,
                                        d = D(k, l);
                                    if (H(48) <= d && d <= H(57)) p = !0;
                                    else {
                                        var g = D(k, l);
                                        p = H(97) <= g && g <= H(102);
                                    }
                                    if (p) u = !0;
                                    else {
                                        var m = D(k, l);
                                        u = H(65) <= m && m <= H(70);
                                    }
                                    n = u;
                                } else n = !1;
                                if (!n) break k;
                                l = (l + 1) | 0;
                            }
                            var h,
                                f = !(l === a) && D(k, l) === H(59);
                            if (!f) {
                                if (lk(this, uk())) return 0;
                                if (lk(this, (ik(), o))) throw P("Semi-colon required at end of numeric entity");
                            }
                            try {
                                h = j($(T(k, t, l)), i ? 16 : 10);
                            } catch (k) {
                                if (k instanceof z) {
                                    return 0;
                                }
                                throw k;
                            }
                            var b = h;
                            if (b > 65535)
                                for (var q = s.bdd(b), v = 0, w = q.length; v < w; ) {
                                    var y = q[v];
                                    (v = (v + 1) | 0), e.g9(y);
                                }
                            else {
                                var E,
                                    A = H(0);
                                if (b < L(A)) E = !0;
                                else {
                                    var x = H(65535);
                                    E = b > L(x);
                                }
                                if (E) throw P("Invalid Char code: " + b);
                                var S = F(b);
                                e.g9(S);
                            }
                            return (((((((2 + l) | 0) - t) | 0) + (i ? 1 : 0)) | 0) + (f ? 1 : 0)) | 0;
                        }
                        return 0;
                    }),
                    (d(dk).jdc = function (k, r) {
                        return new gk(M(k, r), !0);
                    }),
                    (d(gk).wdc = function (k, r) {
                        return this.ddd_1 === this.cdd_1.jm(k) && (r.f9("&#"), r.f9(Y(k, 10)), r.g9(H(59)), !0);
                    }),
                    (d(mk).wdc = function (k, r) {
                        var e,
                            a = H(55296);
                        if (k >= L(a)) {
                            var t = H(57343);
                            e = k <= L(t);
                        } else e = !1;
                        return e;
                    }),
                    (d(fk).bdd = function (k) {
                        var r;
                        if (
                            (function (k, r) {
                                return !((r >>> 16) | 0);
                            })(0, k)
                        )
                            r = K([F(k)]);
                        else {
                            if (
                                !(function (k, r) {
                                    return ((r >>> 16) | 0) < 17;
                                })(0, k)
                            )
                                throw J();
                            var e = Z(2);
                            hk(0, k, e, 0), (r = e);
                        }
                        return r;
                    }),
                    (l = new dk()),
                    (s = new fk()),
                    (k.$_$ = k.$_$ || {}),
                    (k.$_$.a = function () {
                        return null == a && new ek(), a;
                    });
            })(k.exports, e(519039));
        },
    },
]);
//# sourceMappingURL=https://ton.local.twitter.com/responsive-web-internal/sourcemaps/client-web/ondemand.XChat-170d59ab.14cababa.js.map
